---
# yamllint disable rule:line-length
- name: 'Default | verify'
  hosts: 'all'
  gather_facts: false
  tasks:
    - name: 'Default | verify | gather service status'
      ansible.builtin.service_facts:

    - name: 'Default | verify | query paperless.conf'
      ansible.builtin.copy:
        src: '{{ lookup("env", "MOLECULE_PROJECT_DIRECTORY") }}/molecule/files/paperless.conf'
        dest: '/opt/paperless/paperless/paperless.conf'
        owner: 'paperless'
        group: 'paperless'
        mode: '0640'
      check_mode: true
      diff: true
      register: _test_paperless_config

    - name: 'Default | verify | assert paperless.conf'
      ansible.builtin.assert:
        that:
          - not _test_paperless_config.changed
        fail_msg: >
          /opt/paperless/paperless/paperless.conf is not in expected format:
          {{ _test_paperless_config.diff }}.

    # Paperless will fail if configuration is bad (r_pufky.srv.systemd)
    - name: 'Default | verify | assert Paperless-NGX services active'
      ansible.builtin.assert:
        that:
          - '"paperless-consumer.service" in ansible_facts.services'
          - 'ansible_facts["services"]["paperless-consumer.service"]["state"] == "running"'
          - '"paperless-scheduler.service" in ansible_facts.services'
          - 'ansible_facts["services"]["paperless-scheduler.service"]["state"] == "running"'
          - '"paperless-task-queue.service" in ansible_facts.services'
          - 'ansible_facts["services"]["paperless-task-queue.service"]["state"] == "running"'
          - '"paperless-webserver.service" in ansible_facts.services'
          - 'ansible_facts["services"]["paperless-webserver.service"]["state"] == "running"'
          - '"redis-server.service" in ansible_facts.services'
          - 'ansible_facts["services"]["redis-server.service"]["state"] == "running"'
        fail_msg: |
          Paperless-NGX services should be enabled and running:

            paperless-consumer.service: {{ ansible_facts["services"]["paperless-consumer.service"]["state"] }}
           paperless-scheduler.service: {{ ansible_facts["services"]["paperless-scheduler.service"]["state"] }}
          paperless-task-queue.service: {{ ansible_facts["services"]["paperless-task-queue.service"]["state"] }}
           paperless-webserver.service: {{ ansible_facts["services"]["paperless-webserver.service"]["state"] }}
                  redis-server.service: {{ ansible_facts["services"]["redis-server.service"]["state"] }}

    - name: 'Default | verify | query /opt/paperless/paperless/data'
      ansible.builtin.stat:
        path: '/opt/paperless/paperless/data'
      register: _test_paperless_data

    - name: 'Default | verify | assert paperless.conf'
      ansible.builtin.assert:
        that:
          - not _test_paperless_data.stat.exists
        fail_msg: '/opt/paperless/paperless/data should be deleted.'

    - name: 'Default | verify | query /data/data/db.sqlite3'
      ansible.builtin.stat:
        path: '/data/data/db.sqlite3'
      register: _test_paperless_sqlite

    - name: 'Default | verify | assert /data/data/db.sqlite3'
      ansible.builtin.assert:
        that:
          - _test_paperless_sqlite.stat.exists
        fail_msg: '/data/data/db.sqlite3 should be exist.'

    - name: 'Default | verify | query policy.xml'
      ansible.builtin.copy:
        src: '{{ lookup("env", "MOLECULE_PROJECT_DIRECTORY") }}/molecule/files/policy.xml'
        dest: '/etc/ImageMagick-6/policy.xml'
        owner: 'root'
        group: 'root'
        mode: '0644'
      check_mode: true
      diff: true
      register: _test_paperless_magick

    - name: 'Default | verify | assert policy.xml'
      ansible.builtin.assert:
        that:
          - not _test_paperless_magick.changed
        fail_msg: >
          /etc/ImageMagick-6/policy.xml is not in expected format:
          {{ _test_paperless_magick.diff }}.

    - name: 'Default | verify | query gunicorn.conf.py'
      ansible.builtin.copy:
        src: '{{ lookup("env", "MOLECULE_PROJECT_DIRECTORY") }}/molecule/files/gunicorn.conf.py'
        dest: '/opt/paperless/paperless/gunicorn.conf.py'
        owner: 'paperless'
        group: 'paperless'
        mode: '0640'
      check_mode: true
      diff: true
      register: _test_paperless_gunicorn

    - name: 'Default | verify | assert gunicorn.conf.py'
      ansible.builtin.assert:
        that:
          - not _test_paperless_gunicorn.changed
        fail_msg: >
          /opt/paperless/paperless/gunicorn.conf.py is not in expected format:
          {{ _test_paperless_gunicorn.diff }}.

    - name: 'Default | verify | query jbig2'
      ansible.builtin.stat:
        path: '/usr/local/bin/jbig2'
      register: _test_paperless_jbig2

    - name: 'Default | verify | assert big2'
      ansible.builtin.assert:
        that:
          - _test_paperless_jbig2.stat.exists
        fail_msg: '/usr/local/bin/jbig2 should have been built.'

    - name: 'Default | verify | query ghostscript'
      ansible.builtin.stat:
        path: '/usr/local/bin/gs'
      register: _test_paperless_ghostscript

    - name: 'Default | verify | assert ghostscript'
      ansible.builtin.assert:
        that:
          - _test_paperless_ghostscript.stat.exists
        fail_msg: '/usr/local/bin/gs should have been built.'
