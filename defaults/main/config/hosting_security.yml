---
# yamllint disable rule:line-length
###############################################################################
# Hosting and Security
###############################################################################
# Reference:
# * https://docs.paperless-ngx.com/configuration/#hosting-and-security

# Session token secret key.
#
# Used for session token generation.
#
# Default: Randomly generated 50 characters.
paperless_ngx_config_secret_key: '{{ lookup("ansible.builtin.password", "/dev/null", chars=["ascii_lowercase", "ascii_uppercase", "digits"], length=50) }}'

# Set all CSRF, CORS, allowed hosts options at once.
#
# Appended to:
# * paperless_ngx_config_allowed_hosts
# * paperless_ngx_config_cors_allowed_hosts
# * paperless_ngx_config_csrf_trusted_origins
#
# Special Case:
#   *: Do not include trailing slash (e.g. https://paperless.example.com).
#   *: Cannot contain a path (e.g. domain.com/path), even if you are installing
#      paperless-ngx at a subpath. See paperless_ngx_config_force_script_name.
#
# If you get a 'Forbidden (403) CSRF verification failed. Request aborted.'
# Then start by setting this and enabling:
# * paperless_ngx_config_use_x_forward_host
# * paperless_ngx_config_use_x_forward_port
#
# Default: ''.
#
# Reference:
# * https://github.com/paperless-ngx/paperless-ngx/pull/674
# * https://github.com/paperless-ngx/paperless-ngx/issues/712
# * https://github.com/paperless-ngx/paperless-ngx/issues/817
paperless_ngx_config_url: ''

# List of trusted origins for unsafe requests (e.g. POST).
#
# As of Django 4.0 this is required to access the Django admin via the web.
#
# Special Case:
#   *: paperless_ngx_config_url is added to this list.
#
# Default: [] (no trust).
#
# Reference:
# * https://docs.djangoproject.com/en/4.0/ref/settings/#csrf-trusted-origins
paperless_ngx_config_csrf_trusted_origins: []

# List of hosts allowed to connect.
#
# If you're planning on putting Paperless on the open internet, then you really
# should set this value to the domain name you're using. Failing to do so
# leaves you open to HTTP host header attacks. You can read more about this in
# the Django project's documentation.
#
# Special Case:
#   *: paperless_ngx_config_url is added to this list.
#
# Default: ['*'] (all hosts).
paperless_ngx_config_allowed_hosts:
  - '*'

# List of cross origin resource sharing (CORS) allowed hosts.
#
# Servers should be added here to the list of allowed hosts that can do CORS
# calls (like NGINX). Set this to your public domain name.
#
# Special Case:
#   *: paperless_ngx_config_url is added to this list.
#
# Default: 'http://localhost:8000'.
#
# Reference:
# * https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS
paperless_ngx_config_cors_allowed_hosts:
  - 'http://localhost:8000'

# List of Trusted proxies.
#
# May be needed to prevent IP address spoofing if you are using fail2ban with
# log entries for failed authorization attempts.
#
# Values:
#   {IP}: IPv4,IPv6 address.
#
# Default: [] (disabled).
paperless_ngx_config_trusted_proxies: []

# Hosting path.
#
# Values:
#   /{PATH}: subpath to use (/ngx -> example.com/ngx).
#        '': Use root path '/' (example.com) (default).
#
# Default: '' (host at /).
paperless_ngx_config_force_script_name: ''

# Hosting static (sub) path.
#
# Unless you're hosting Paperless off a subdomain like /paperless/, you
# probably don't need to change this.
#
# Special Case:
#   *: Reverse proxy use with a subpath e.g. example.com/paperlessngx must also
#      use paperless_ngx_config_force_script_name.
#   *: Requires trailing /.
#
# Default: '/static/'.
paperless_ngx_config_static_url: '/static/'

# Automatically login as specified user.
#
# Do **NOT** use if exposed externally.
#
# Default: '' (disabled).
paperless_ngx_config_auto_login_username: ''

# Cookie prefix.
#
# Use when running multiple instances on the same system.
#
# Default: '' (disabled).
paperless_ngx_config_cookie_prefix: ''

# Enable authentication via 'Remote-User'?
#
# Do **NOT** use if exposed externally without a reverse proxy.
#
# This will allow authentication by simply adding a Remote-User: <username>
# header to a request. Use with care! You especially must ensure that any such
# header is not passed from external requests to your reverse-proxy to
# paperless (that would effectively bypass all authentication).
#
# Requests should come from trusted sources. Use for SSO, do **not** use with
# proxy.
#
# Default: False.
#
# Reference:
# * https://docs.djangoproject.com/en/4.1/howto/auth-remote-user/#configuration
paperless_ngx_config_enable_http_remote_user: false

# Enable authentication via HTTP_REMOTE_USER directly against the API?
#
# Do **NOT** use if exposed externally without a reverse proxy.
#
# This setting is separate from PAPERLESS_ENABLE_HTTP_REMOTE_USER to avoid
# introducing a security vulnerability to existing reverse proxy setups.
#
# This will allow authentication by simply adding a Remote-User: <username>
# header to a request. Use with care! You especially must ensure that any such
# header is not passed from external requests to your reverse-proxy to
# paperless (that would effectively bypass all authentication).
#
# Requests should come from trusted sources. Use for SSO, do **not** use with
# proxy.
#
# Default: False.
paperless_ngx_config_enable_http_remote_user_api: false

# Specify custom header for obtaining username.
#
# Requires (either):
#   * paperless_ngx_config_enable_http_remote_user=true
#   * paperless_ngx_config_enable_http_remote_user_api=true
#
# Use custom HTTP header name from which the authenticated username is
# extracted. Values are in terms of HttpRequest.META. Thus, the configured
# value must start with HTTP* followed by the normalized actual header name.
#
# Default: 'HTTP_REMOTE_USER'.
paperless_ngx_config_http_remote_user_header_name: 'HTTP_REMOTE_USER'

# URL to redirect the user to after a logout.
#
# Can be used with paperless_ngx_config_enable_http_remote_user=true and SSO to
# redirect the user back to the SSO application's logout page to complete the
# logout process.
#
# Default: '' (disabled).
paperless_ngx_config_logout_redirect_url: ''

# Enable Django use of USE_X_FORWARDED_HOST?
#
# May be needed for hosting behind a proxy.
#
# Default: False.
#
# Reference:
# * https://docs.djangoproject.com/en/4.2/ref/settings/#use-x-forwarded-host
paperless_ngx_config_use_x_forward_host: false

# Enable Django use of USE_X_FORWARD_PORT?
#
# May be needed for hosting behind a proxy.
#
# Default: False.
#
# Reference:
# * https://docs.djangoproject.com/en/4.2/ref/settings/#use-x-forwarded-port
paperless_ngx_config_use_x_forward_port: false

# Enable Django use of SECURE_PROXY_SSL_HEADER?
#
# Automatically converted to JSON.
#
# May be needed for hosting behind a proxy. Danger! Setting this value has
# security implications. Read the Django documentation and be sure you
# understand its usage before setting it.
#
# Special Case:
#    *: YAML will automatically be converted to JSON object.
#   "": Use double quotes for correct escape character interpretation for JSON.
#
# paperless_ngx_config_proxy_ssl_header:
#   header: 'HTTP_X_FORWARDED_PROTO'
#   value: 'https'
#
# Default: {} (disabled).
#
# Reference:
# * https://docs.djangoproject.com/en/4.2/ref/settings/#secure-proxy-ssl-header
paperless_ngx_config_proxy_ssl_header: {}
