---
###############################################################################
# Paperless NGX Core
###############################################################################
# Caculate core paperless variables for installation and upgrade.
#
# Some PDF's with older ICC profiles may fail to be injested. Though rare,
# thsee can be manually pre-processed to fix the ICC profiles.
#
#   gs -o output.pdf -sDEVICE=pdfwrite -dPDFSETTINGS=/prepress input.pdf
#
# Generates:
#   _pngx_target: str full version (ng-x.x.x) to install.
#   _pngx_jbig2enc_install: bool true if new version needs to be installed.
#   _pngx_jbig2enc_dir: str jbig2enc build location.
#   _pngx_jbig2enc_version: str jbig2enc release.
#   _pngx_ocr_packages: list of str containing OCR packages to install.
#   _pngx_url: str download url for current release.
#   _pngx_install_dir: str versioned install location.
#   _pngx_archive: str local versioned archive location.
#   _pngx_venv: str versioned python virtual environment location.
#   _pngx_staticdir: str calculated static serving location.
#   _pngx_service_consumer: str path to consumer service definition.
#   _pngx_service_scheduler: str path to scheduler service definition.
#   _pngx_service_webserver: str path to webserver service definition.
#   _pngx_service_task_queue: str path to task queue service definition.
#   _pngx_convert_tmpdir: str path temp directory for processing.
#
# Reference:
# * https://docs.paperless-ngx.com/
# * https://github.com/paperless-ngx/paperless-ngx/releases
# * https://kcore.org/2021/05/08/paperless-ng/

- name: 'core | determine latest release version number'
  block:
    - name: 'core | get release metadata'
      ansible.builtin.uri:
        url: 'https://api.github.com/repos/paperless-ngx/paperless-ngx/releases/latest'
        method:         GET
        return_content: true
        status_code:    200
        body_format:    json
      register: _pngx_remote_metadata

    - name: 'core | set latest release'
      ansible.builtin.set_fact:
        _pngx_target: 'v{{ _pngx_remote_metadata.json.tag_name[1:] }}'
  when: pngx_version == 'latest'

- name: 'core | set version target ({{ pngx_version }})'
  ansible.builtin.set_fact:
    _pngx_target: '{{ pngx_version }}'
  when: pngx_version != 'latest'

- name: 'core | determine jbig2enc install version'
  block:
    - name: 'core | detect jbig2enc version'
      ansible.builtin.command:
        cmd: 'jbig2 --version'
      changed_when:
        _pngx_jbig2enc_detected_version.rc != 0 or
        (_pngx_jbig2enc_detected_version.stderr.split(' ')[-1] != pngx_default_jbig2enc_version|string)|default(true)
      failed_when: false
      ignore_errors: true
      register: _pngx_jbig2enc_detected_version
  when: pngx_pfda_compression

- name: 'core | generate versioned locations'
  ansible.builtin.set_fact:
    _pngx_jbig2enc_install: '{% if _pngx_jbig2enc_detected_version.changed and pngx_pfda_compression %}true{% else %}false{% endif %}'
    _pngx_jbig2enc_dir:     '{% if pngx_jbig2enc_dir|length > 0 %}{{ pngx_jbig2enc_dir }}{% else %}{{ pngx_default_jbig2enc_dir }}{% endif %}'
    _pngx_jbig2enc_version: '{% if pngx_jbig2enc_version|length > 0 %}{{ pngx_jbig2enc_version }}{% else %}{{ pngx_default_jbig2enc_version }}{% endif %}'
    _pngx_ocr_packages:     '{% if pngx_ocr_languages|length == 0 %}{{ ["tesseract-ocr-all"] }}{% else %}{{ pngx_ocr_languages|map("regex_replace", "^(.*)$", "tesseract-ocr-\1")|list }}{% endif %}'
    _pngx_url:              'https://github.com/paperless-ngx/paperless-ngx/releases/download/{{ _pngx_target }}/paperless-ngx-{{ _pngx_target }}.tar.xz'
    _pngx_install_dir:      '{{ pngx_default_install_dir }}/paperless-ngx-{{ _pngx_target }}'
    _pngx_archive:          '/tmp/paperless-ngx-{{ _pngx_target }}.tar.xz'
    _pngx_convert_tmpdir:   '{{ pngx_convert_tmpdir if pngx_tmp_memory|length == 0 else "/tmp" }}'

- name: 'core | generate install configuration'
  ansible.builtin.set_fact:
    _pngx_venv:               '{{ _pngx_install_dir }}/.venv'
    _pngx_staticdir:          '{% if pngx_staticdir|length > 0 %}{{ pngx_staticdir }}{% else %}{{ _pngx_install_dir }}/static{% endif %}'
    _pngx_service_consumer:   '{{ _pngx_install_dir }}/scripts/paperless-consumer.service'
    _pngx_service_scheduler:  '{{ _pngx_install_dir }}/scripts/paperless-scheduler.service'
    _pngx_service_webserver:  '{{ _pngx_install_dir }}/scripts/paperless-webserver.service'
    _pngx_service_task_queue: '{{ _pngx_install_dir }}/scripts/paperless-task-queue.service'