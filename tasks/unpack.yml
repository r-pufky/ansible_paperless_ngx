---
###############################################################################
# Paperless NGX Unpack Github Archive
###############################################################################
# Create versioned paperless-ngx directory and unpack 'complete' archive.
# Remove Uncessary files.
#
# Args:
#   _pngx_install_dir: str versioned install location.
#   _pngx_archive: str local versioned archive location.
#   _pngx_install_stat: stat object for the versioned install location.

- name: 'unpack | create paperless directory'
  ansible.builtin.file:
    path:  '{{ _pngx_install_dir }}'
    owner: '{{ pngx_user }}'
    group: '{{ pngx_group }}'
    mode:  0750
    state: 'directory'

- name: 'unpack | unpack archive'
  ansible.builtin.unarchive:
    src:        '{{ _pngx_archive }}'
    remote_src: true
    dest:       '{{ _pngx_install_dir }}'
    creates:    '{{ _pngx_install_dir }}/paperless.conf.template'
    owner:      '{{ pngx_user }}'
    group:      '{{ pngx_group }}'
    mode:       'a-st,o-rwx'
    # Remove the leading 'paperless-ngx/' directory in the archive
    extra_opts: '--strip-components=1'
  become: true
  register: _pngx_unpacked
  when: not _pngx_install_stat.stat.exists
  notify: 'reload paperless_ngx'

- name: 'unpack | remove unused archive files'
  ansible.builtin.file:
    path:  '{{ item }}'
    state: 'absent'
  loop:
    - '{{ _pngx_install_dir }}/docker'
    - '{{ _pngx_install_dir }}/docs'
    - '{{ _pngx_install_dir }}/.dockerignore'
    - '{{ _pngx_install_dir }}/.env'
    - '{{ _pngx_install_dir }}/Dockerfile'
    - '{{ _pngx_install_dir }}/LICENSE'
    - '{{ _pngx_install_dir }}/README.md'
    - '{{ _pngx_install_dir }}/Pipfile'
    - '{{ _pngx_install_dir }}/Pipfile.lock'
  when: not _pngx_install_stat.stat.exists

- name: 'unpack | remove unused archive data directory'
  ansible.builtin.file:
    path:  '{{ _pngx_install_dir }}/data'
    state: 'absent'
  when: _pngx_install_dir + '/data' != pngx_data_dir

- name: 'unpack | remove unused archive trash directory'
  ansible.builtin.file:
    path:  '{{ _pngx_install_dir }}/trash'
    state: 'absent'
  when: _pngx_install_dir + '/trash' != pngx_trash_dir

- name: 'unpack | remove unused archive consume directory'
  ansible.builtin.file:
    path:  '{{ _pngx_install_dir }}/consume'
    state: 'absent'
  when: _pngx_install_dir + '/consume' != pngx_consumption_dir

- name: 'unpack | remove unused archive media directory'
  ansible.builtin.file:
    path:  '{{ _pngx_install_dir }}/media'
    state: 'absent'
  when: _pngx_install_dir + '/media' != pngx_media_root

# Paperless searches for paperless.conf in same directory before /etc. All
# releases use 'paperless.conf' instead of 'paperless.conf.template' (or some
# other moniker) which loads unconfigured options instead of configured ones.
# Prevent this from happening.
#
# Reference:
# * https://github.com/jonaswinkler/paperless-ng/blob/7bc8325df910ab57ed07849a3ce49a3011ba55b6/src/paperless/settings.py#L13
# * https://docs.paperless-ngx.com/configuration/
- name: 'unpack | fix config precedence ordering issue'
  ansible.builtin.command: 'mv -f "{{ _pngx_install_dir }}/paperless.conf" "{{ _pngx_install_dir }}/paperless.conf.template"'
  args:
    removes: '{{ _pngx_install_dir }}/paperless.conf'
  changed_when: false

# Removing executable permissions inside virtual environments will break them;
# permissions are set in virtual environment setup.
- name: 'unpack | set install permissions' # noqa no-handler conditional
  ansible.builtin.shell: |
    chown -R {{ pngx_user }}:{{ pngx_group }} '{{ _pngx_install_dir }}' &&
    find '{{ _pngx_install_dir }}' -type d ! -path "*.venv*" -exec chmod 0750 {} \; &&
    find '{{ _pngx_install_dir }}' -type f ! -path "*.venv*" -exec chmod 0640 {} \;
  args:
    warn: false
  changed_when: false
  when: _pngx_unpacked.changed
