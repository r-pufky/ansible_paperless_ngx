---
###############################################################################
# Prep
###############################################################################
# Assert user data is not stored in install location, create user if needed and
# determine UID/GID for potential remote filesystems. Stop services if they
# exist.
#
# Reference:
# * https://docs.paperless-ngx.com/setup/#bare_metal

# yamllint disable rule:line-length
- name: 'Prep | assert data locations are not in install paths'
  ansible.builtin.assert:
    quiet: true
    that:
      - not _paperless_ngx_cfg_consumption_dir.raw.startswith(
        paperless_ngx_role_repo_extract_dir)
      - not _paperless_ngx_cfg_data_dir.raw.startswith(
        paperless_ngx_role_repo_extract_dir)
      - not _paperless_ngx_cfg_empty_trash_dir.raw.startswith(
        paperless_ngx_role_repo_extract_dir)
      - not _paperless_ngx_cfg_media_root.raw.startswith(
        paperless_ngx_role_repo_extract_dir)
      - not _paperless_ngx_cfg_logging_dir.raw.startswith(
        paperless_ngx_role_repo_extract_dir)
    fail_msg: |
      ╭───────────────────────────────────────────────────────────────────╮
      │                                                                   │
      │    Data storage should not be in the same location as install.    │
      │                                                                   │
      ├───────────────────────────────────────────────────────────────────╯
      │ Install: {{ paperless_ngx_role_repo_extract_dir }}
      │
      │ paperless_ngx_cfg_consumption_dir: {{ _paperless_ngx_cfg_consumption_dir.raw }}
      │ paperless_ngx_cfg_data_dir: {{ _paperless_ngx_cfg_data_dir.raw }}
      │ paperless_ngx_cfg_empty_trash_dir: {{ _paperless_ngx_cfg_empty_trash_dir.raw }}
      │ paperless_ngx_cfg_media_root: {{ _paperless_ngx_cfg_media_root.raw }}

# Don't use ansible.builtin.version as we ignore patch differences.
- name: 'Prep | officially supported release version ⓘ'
  when:
    _paperless_ngx_srv_version._major_version !=
    paperless_ngx_role_major_version
  ansible.builtin.debug:
    msg: |
      ╭───────────────────────────────────────────────────────────────────╮
      │                                                                   │
      │               Officially supported release versions               │
      │                                                                   │
      ├───────────────────────────────────────────────────────────────────╯
      │ {{ paperless_ngx_role_major_version }}.x releases supported.
      │
      │ paperless_ngx_srv_version: {{ _paperless_ngx_srv_version.raw }}
      │ paperless_ngx_srv_version (major): {{ _paperless_ngx_srv_version._major_version }}
# yamllint enable rule:line-length

- name: 'Prep | fatal version mis-match'
  when: >
    _paperless_ngx_srv_version._major_version !=
    paperless_ngx_role_major_version
    and
    _paperless_ngx_srv_fatal_version_enable.raw
  ansible.builtin.fail:
    msg: |
      ╭───────────────────────────────────────────────────────────────────╮
      │                                                                   │
      │                     Fatal version mis-match.                      │
      │                                                                   │
      ├───────────────────────────────────────────────────────────────────╯
      │ Set paperless_ngx_srv_fatal_version_enable=false to ignore.

- name: 'Prep | manage users'
  when: _paperless_ngx_srv_create_user.raw
  ansible.builtin.include_role:
    name: 'r_pufky.deb.users'
    tasks_from: 'role_account_add.yml'
  vars:
    users_role_user: '{{ paperless_ngx_role_user }}'
    users_role_group: '{{ paperless_ngx_role_group }}'

- name: 'Prep | enumerate system user {{ _paperless_ngx_srv_user.raw }}'
  ansible.builtin.user:
    name: '{{ _paperless_ngx_srv_user.raw }}'
  check_mode: true
  changed_when: false
  register: _paperless_ngx_srv_user_query

- name: 'Prep | parse system user UID/GID'
  ansible.builtin.set_fact:
    _paperless_ngx_srv_user: '{{
        _paperless_ngx_srv_user |
        combine({"_uid": _paperless_ngx_srv_user_query.uid})
      }}'
    _paperless_ngx_srv_group: '{{
        _paperless_ngx_srv_group |
        combine({"_gid": _paperless_ngx_srv_user_query.group})
      }}'

- name: 'Prep | stop services'
  ansible.builtin.systemd:
    name: '{{ item }}'
    state: 'stopped'
  failed_when: false
  loop: '{{
      ["redis-server.service" if _paperless_ngx_srv_redis_enable.raw else "",
       "paperless-consumer.service",
       "paperless-scheduler.service",
       "paperless-task-queue.service",
       "paperless-webserver.service",
       "paperless-cache.service",
       "paperless-cache.timer"] | select()
    }}'
