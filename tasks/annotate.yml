---
# yamllint disable rule:line-length
###############################################################################
# Annotate User Configuration.
###############################################################################
# Paperless does not consistently apply variable conventions to config file,
# using a combination of absent, none, 'None', '' (empty string), 'unset', and
# 'blank' values to explicitly represent omitted states (and in some cases
# where a empty string means something different than None), including Boolean
# values. Order does not matter.
#
# Some values are rendered as pure JSON strings (which must be tested against
# raw values as emtpy JSON strings may contained escaped characters).
#
# Decision: Use defined variable interpretation guidance below for rendering.
#     Adjust and explicitly comment variables that do not follow role-specific
#     interpretation for default values:
#     * Boolean - Lowercased string.
#     * '' - render as empty string.
#     * None,none - Variable removed from rendering. Use role_unset=true to
#           explicitly remove from render.
#     * Absent,Unset,Blank - Variable removed from rendering for specific
#           values. Use role_unset=true to explicitly remove from render.
#     * JSON - RAW json data structure string.
#
# Docker-specific options are NOT implemented.
#
# Only valid database options can exist for the specified DB engine, otherwise
# paperless fails to start. Generate additional APT package dependencies for
# OCR supported languages.
#
# A necessary evil given the limitations of argument_spec:
# * Strong validation and sanitization of user input.
# * Annotated variable providing context and rendering hints.
# * Logic updates centrally located in tasks.
# * Simplified role updates for variable changes.
# * All data touched by user is in a standard, expected format.
#
# Annotated Defaults (2.0):
# _{VAR}: dict - Annotated and sanitized default variable.
#   section: str - Section name.
#   key: str - Config file key.
#   raw: any - Raw value from user, defaults, or role defaults.
#   data: any - Processed raw value for use in rendering. Optional.
#   default: any - Role default (testing for changed defaults).
#   hint: str - Value rendering type hint (docstring types).
#   role_*: any - Role specific usage. Optional.
#   added: str - Release version variable added.
#       Special Case:
#         0.0.0: Unknown or since role inception.
#   sensitive: bool - True for PII/SPII data that should not be logged.
#   deprecated: bool - True if no longer used in current role release.
#   order: int - Order item should appear in templated files.
#
# Generates:
#   _paperless_ngx: dict - Role runtime specific config.
#   _paperless_ngx_map: list of dict - Annotated config map.
#   _paperless_ngx_order: list of str - Config section order.
#
# Reference:
# * https://docs.paperless-ngx.com/setup/#bare_metal
# * https://docs.ansible.com/ansible/latest/dev_guide/developing_program_flow_modules.html#argument-spec
# * https://github.com/ansible/ansible/issues/77159
# yamllint enable rule:line-length

- name: 'Annotate | DEPRECATED VARIABLES IN USE ⚠'
  when: >
    paperless_ngx_cfg_trash_dir is defined
    paperless_webhooks_allow_internal_requests is defined
  ansible.builtin.fail:
    msg: |
      ╭───────────────────────────────────────────────────────────────────╮
      │                                                                   │
      │                   DEPRECATED VARIABLES IN USE.                    │
      │                                                                   │
      ├───────────────────────────────────────────────────────────────────╯
      │ Refer to defaults and update variables:
      │
      │ paperless_ngx_cfg_trash_dir -> paperless_ngx_cfg_empty_trash_dir
      │ paperless_webhooks_allow_internal_requests -> paperless_srv_webhooks_allow_internal_requests

- name: 'Annotate | sanitize & annotate service defaults'
  ansible.builtin.set_fact:
    _paperless_ngx_srv_version: {
      section: '',
      key: '',
      raw: '{{ paperless_ngx_srv_version }}',
      default: '{{ paperless_ngx_role_validate_version }}',
      role_major_version:
        '{{ paperless_ngx_srv_version[1:].split(".")[:2] | join(".") }}',
      hint: 'str',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 1,
    }
    _paperless_ngx_srv_fatal_version_enable: {
      section: '',
      key: '',
      raw: '{{ paperless_ngx_srv_fatal_version_enable }}',
      default: true,
      hint: 'bool',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 2,
    }
    _paperless_ngx_srv_redis_enable: {
      section: '',
      key: '',
      raw: '{{ paperless_ngx_srv_redis_enable }}',
      default: true,
      hint: 'bool',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 3,
    }
    _paperless_ngx_srv_nltk_data: {
      section: '',
      key: '',
      raw: '{{ paperless_ngx_srv_nltk_data }}',
      default: '{{ paperless_ngx_role_nltk_data }}',
      role_packages: '{{ paperless_ngx_srv_nltk_data | join(" ") }}',
      hint: 'list of str',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 4,
    }
    _paperless_ngx_srv_jbig2enc_version: {
      section: '',
      key: '',
      raw: '{{ paperless_ngx_srv_jbig2enc_version }}',
      default: '{{ paperless_ngx_role_jbig2enc_version }}',
      hint: 'str',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 5,
    }
    _paperless_ngx_srv_ghostscript_version: {
      section: '',
      key: '',
      raw: '{{ paperless_ngx_srv_ghostscript_version }}',
      default: '{{ paperless_ngx_role_ghostscript_version }}',
      role_release_tag: '{{
          "gs" ~ paperless_ngx_srv_ghostscript_version |
          replace(".", "") | replace("-", "")
        }}',
      hint: 'str',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 6,
    }
    _paperless_ngx_srv_certs_path: {
      section: '',
      key: '',
      raw: '{{ paperless_ngx_srv_certs_path }}',
      role_src:
        "{{ paperless_ngx_srv_certs_path | regex_replace('\\/$', '') ~ '/' }}",
      role_dest: '{{ paperless_ngx_role_repo_extract_dir ~ "/certs" }}',
      hint: 'str',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 7,
    }
    _paperless_ngx_srv_delete_old_versions_enable: {
      section: '',
      key: '',
      raw: '{{ paperless_ngx_srv_delete_old_versions_enable }}',
      default: true,
      hint: 'bool',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 8,
    }
    _paperless_ngx_srv_force_overwrite: {
      section: '',
      key: '',
      raw: '{{ paperless_ngx_srv_force_overwrite }}',
      default: false,
      hint: 'bool',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 9,
    }
    _paperless_ngx_srv_restart_daily_enable: {
      section: '',
      key: '',
      raw: '{{ paperless_ngx_srv_restart_daily_enable }}',
      default: false,
      hint: 'bool',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 10,
    }
    _paperless_ngx_srv_cache_lifetime: {
      section: '',
      key: '',
      raw: '{{ paperless_ngx_srv_cache_lifetime }}',
      data: '{{ paperless_ngx_srv_cache_lifetime ~ "m" }}',
      default: 30,
      hint: 'int',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 11,
    }
    _paperless_ngx_srv_force_config_only_enable: {
      section: '',
      key: '',
      raw: '{{ paperless_ngx_srv_force_config_only_enable }}',
      default: false,
      hint: 'bool',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 12,
    }
    _paperless_ngx_srv_log_level: {
      section: '',
      key: '',
      raw: '{{ paperless_ngx_srv_log_level | upper }}',
      default: 'INFO',
      hint: 'str',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 13,
    }
    _paperless_ngx_srv_address: {
      section: '',
      key: '',
      raw: '{{ paperless_ngx_srv_address }}',
      default: '0.0.0.0',
      hint: 'str',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 14,
    }
    _paperless_ngx_srv_port: {
      section: '',
      key: '',
      raw: '{{ paperless_ngx_srv_port }}',
      default: 8000,
      hint: 'int',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 15,
    }
    _paperless_ngx_srv_webserver_workers: {
      section: '',
      key: '',
      raw: '{{ paperless_ngx_srv_webserver_workers }}',
      default: 1,
      hint: 'int',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 16,
    }
    _paperless_ngx_srv_user: {
      section: '',
      key: '',
      raw: '{{ paperless_ngx_srv_user }}',
      default: 'paperless',
      role_uid: '',  # (str) UID.
      hint: 'str',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 17,
    }
    _paperless_ngx_srv_group: {
      section: '',
      key: '',
      raw: '{{ paperless_ngx_srv_group }}',
      default: 'paperless',
      role_gid: '',  # (str) GID.
      hint: 'str',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 18,
    }
    _paperless_ngx_srv_user_data_manage_enable: {
      section: '',
      key: '',
      raw: '{{ paperless_ngx_srv_user_data_manage_enable }}',
      default: false,
      hint: 'bool',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 19,
    }
    _paperless_ngx_srv_create_user: {
      section: '',
      key: '',
      raw: '{{ paperless_ngx_srv_create_user }}',
      default: true,
      hint: 'bool',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 20,
    }
    _paperless_ngx_srv_media_folders: {
      section: '',
      key: '',
      raw: '{{ paperless_ngx_srv_media_folders }}',
      default: ['/data/consume', '/data/data', '/data/media'],
      hint: 'list of str',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 21,
    }
    _paperless_ngx_srv_media_perms_folder: {
      section: '',
      key: '',
      raw: '{{ paperless_ngx_srv_media_perms_folder }}',
      default: '0750',
      hint: 'str',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 22,
    }
    _paperless_ngx_srv_media_set_perms_file_enable: {
      section: '',
      key: '',
      raw: '{{ paperless_ngx_srv_media_set_perms_file_enable }}',
      default: false,
      hint: 'bool',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 23,
    }
    _paperless_ngx_srv_media_perms_file: {
      section: '',
      key: '',
      raw: '{{ paperless_ngx_srv_media_perms_file }}',
      default: '0640',
      hint: 'str',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 24,
    }

- name: 'Annotate | sanitize & annotate config defaults'
  ansible.builtin.set_fact:
    _paperless_ngx_cfg_debug: {
      section: 'Debug',
      key: 'PAPERLESS_DEBUG',
      raw: '{{ paperless_ngx_cfg_debug }}',
      default: false,
      hint: 'bool',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 1,
    }
    _paperless_ngx_cfg_redis: {
      section: 'Required Services',
      key: 'PAPERLESS_REDIS',
      raw: '{{ paperless_ngx_cfg_redis }}',
      default: 'redis://localhost:6379',
      hint: 'str',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 1,
    }
    _paperless_ngx_cfg_redis_prefix: {
      section: 'Required Services',
      key: 'PAPERLESS_REDIS_PREFIX',
      raw: '{{ paperless_ngx_cfg_redis_prefix }}',
      default: '',
      hint: 'str',
      added: '1.17.0',
      sensitive: false,
      deprecated: false,
      order: 2,
    }
    _paperless_ngx_cfg_dbhost: {
      section: 'Required Services',
      key: 'PAPERLESS_DBHOST',
      raw: '{{ paperless_ngx_cfg_dbhost }}',
      data: '{{ paperless_ngx_cfg_dbhost }}',
      default: 'localhost',
      role_unset:
        '{{ true if paperless_ngx_cfg_dbengine == "sqlite" else false }}',
      hint: 'str',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 3,
    }
    _paperless_ngx_cfg_dbengine: {
      section: 'Required Services',
      key: 'PAPERLESS_DBENGINE',
      raw: '{{ paperless_ngx_cfg_dbengine }}',
      default: 'postgresql',
      role_unset:
        '{{ true if paperless_ngx_cfg_dbengine == "sqlite" else false }}',
      hint: 'str',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 4,
    }
    _paperless_ngx_cfg_dbport: {
      section: 'Required Services',
      key: 'PAPERLESS_DBPORT',
      raw: '{{ paperless_ngx_cfg_dbport }}',
      default: 5432,
      role_unset:
        '{{ true if paperless_ngx_cfg_dbengine == "sqlite" else false }}',
      hint: 'int',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 5,
    }
    _paperless_ngx_cfg_dbname: {
      section: 'Required Services',
      key: 'PAPERLESS_DBNAME',
      raw: '{{ paperless_ngx_cfg_dbname }}',
      default: 'paperless',
      role_unset:
        '{{ true if paperless_ngx_cfg_dbengine == "sqlite" else false }}',
      hint: 'str',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 6,
    }
    _paperless_ngx_cfg_dbuser: {
      section: 'Required Services',
      key: 'PAPERLESS_DBUSER',
      raw: '{{ paperless_ngx_cfg_dbuser }}',
      default: 'paperless',
      role_unset:
        '{{ true if paperless_ngx_cfg_dbengine == "sqlite" else false }}',
      hint: 'str',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 7,
    }
    _paperless_ngx_cfg_dbpass: {
      section: 'Required Services',
      key: 'PAPERLESS_DBPASS',
      raw: '{{ paperless_ngx_cfg_dbpass }}',
      default: 'paperless',
      role_unset:
        '{{ true if paperless_ngx_cfg_dbengine == "sqlite" else false }}',
      hint: 'str',
      added: '0.0.0',
      sensitive: true,
      deprecated: false,
      order: 8,
    }
    _paperless_ngx_cfg_dbsslmode: {
      section: 'Required Services',
      key: 'PAPERLESS_DBSSLMODE',
      raw: '{{ paperless_ngx_cfg_dbsslmode }}',
      default: 'prefer',
      role_unset:
        '{{ true if paperless_ngx_cfg_dbengine == "sqlite" else false }}',
      hint: 'str',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 9,
    }
    _paperless_ngx_cfg_dbsslrootcert: {
      section: 'Required Services',
      key: 'PAPERLESS_DBSSLROOTCERT',
      raw: '{{ paperless_ngx_cfg_dbsslrootcert }}',
      default: '',
      role_unset:
        '{{ true if paperless_ngx_cfg_dbsslrootcert == "" else false }}',
      hint: 'str',
      added: '1.14.0',
      sensitive: true,
      deprecated: false,
      order: 10,
    }
    _paperless_ngx_cfg_dbsslcert: {
      section: 'Required Services',
      key: 'PAPERLESS_DBSSLCERT',
      raw: '{{ paperless_ngx_cfg_dbsslcert }}',
      default: '',
      role_unset: '{{ true if paperless_ngx_cfg_dbsslcert == "" else false }}',
      hint: 'str',
      added: '1.14.0',
      sensitive: true,
      deprecated: false,
      order: 11,
    }
    _paperless_ngx_cfg_dbsslkey: {
      section: 'Required Services',
      key: 'PAPERLESS_DBSSLKEY',
      raw: '{{ paperless_ngx_cfg_dbsslkey }}',
      default: '',
      role_unset: '{{ true if paperless_ngx_cfg_dbsslkey == "" else false }}',
      hint: 'str',
      added: '1.14.0',
      sensitive: true,
      deprecated: false,
      order: 12,
    }
    _paperless_ngx_cfg_db_timeout: {
      section: 'Required Services',
      key: 'PAPERLESS_DB_TIMEOUT',
      raw: '{{ paperless_ngx_cfg_db_timeout }}',
      default: 0,
      role_unset:
        '{{ true if paperless_ngx_cfg_db_timeout == -1 else false }}',
      hint: 'int',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 13,
    }
    _paperless_ngx_cfg_db_poolsize: {
      section: 'Required Services',
      key: 'PAPERLESS_DB_POOLSIZE',
      raw: '{{ paperless_ngx_cfg_db_poolsize }}',
      default: 0,
      role_unset:
        '{{ true if paperless_ngx_cfg_db_poolsize == 0 else false }}',
      hint: 'int',
      added: '2.18.0',
      sensitive: false,
      deprecated: false,
      order: 14,
    }
    _paperless_ngx_cfg_db_read_cache_enabled: {
      section: 'Required Services',
      key: 'PAPERLESS_DB_READ_CACHE_ENABLED',
      raw: '{{ paperless_ngx_cfg_db_read_cache_enabled }}',
      default: false,
      hint: 'bool',
      added: '2.18.0',
      sensitive: false,
      deprecated: false,
      order: 15,
    }
    _paperless_ngx_cfg_read_cache_ttl: {
      section: 'Required Services',
      key: 'PAPERLESS_READ_CACHE_TTL',
      raw: '{{ paperless_ngx_cfg_read_cache_ttl }}',
      default: 3600,
      hint: 'int',
      added: '2.18.0',
      sensitive: false,
      deprecated: false,
      order: 16,
    }
    _paperless_ngx_cfg_read_cache_redis_url: {
      section: 'Required Services',
      key: 'PAPERLESS_READ_CACHE_REDIS_URL',
      raw: '{{ paperless_ngx_cfg_read_cache_redis_url }}',
      default: '',
      hint: 'str',
      added: '2.18.0',
      sensitive: false,
      deprecated: false,
      order: 17,
    }
    _paperless_ngx_cfg_tika_enabled: {
      section: 'Optional Services (Tika settings)',
      key: 'PAPERLESS_TIKA_ENABLED',
      raw: '{{ paperless_ngx_cfg_tika_enabled }}',
      default: false,
      hint: 'bool',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 1,
    }
    _paperless_ngx_cfg_tika_endpoint: {
      section: 'Optional Services (Tika settings)',
      key: 'PAPERLESS_TIKA_ENDPOINT',
      raw: '{{ paperless_ngx_cfg_tika_endpoint }}',
      default: 'http://localhost:9998',
      hint: 'str',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 2,
    }
    _paperless_ngx_cfg_tika_gotenberg_endpoint: {
      section: 'Optional Services (Tika settings)',
      key: 'PAPERLESS_TIKA_GOTENBERG_ENDPOINT',
      raw: '{{ paperless_ngx_cfg_tika_gotenberg_endpoint }}',
      default: 'http://localhost:3000',
      hint: 'str',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 3,
    }
    _paperless_ngx_cfg_email_parse_default_layout: {
      section: 'Email Parsing',
      key: 'PAPERLESS_EMAIL_PARSE_DEFAULT_LAYOUT',
      raw: '{{ paperless_ngx_cfg_email_parse_default_layout }}',
      default: 2,
      hint: 'int',
      added: '2.15.0',
      sensitive: false,
      deprecated: false,
      order: 1,
    }
    _paperless_ngx_cfg_consumption_dir: {
      section: 'Paths and Folders',
      key: 'PAPERLESS_CONSUMPTION_DIR',
      raw: '{{ paperless_ngx_cfg_consumption_dir }}',
      default: '/data/consume',
      role_dest: "{{
          paperless_ngx_cfg_consumption_dir | regex_replace('\\/$', '') ~ '/'
        }}",
      hint: 'str',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 1,
    }
    _paperless_ngx_cfg_data_dir: {
      section: 'Paths and Folders',
      key: 'PAPERLESS_DATA_DIR',
      raw: '{{ paperless_ngx_cfg_data_dir }}',
      default: '/data/data',
      hint: 'str',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 2,
    }
    _paperless_ngx_cfg_trash_dir: {
      section: 'Paths and Folders',
      key: 'PAPERLESS_TRASH_DIR',
      raw: '{{ paperless_ngx_cfg_empty_trash_dir }}',
      default: '',
      hint: 'str',
      added: '0.0.0',
      sensitive: false,
      deprecated: true,  # replaced by PAPERLESS_EMPTY_TRASH_DIR.
      order: 3,
    }
    _paperless_ngx_cfg_empty_trash_dir: {
      section: 'Paths and Folders',
      key: 'PAPERLESS_EMPTY_TRASH_DIR',
      raw: '{{ paperless_ngx_cfg_empty_trash_dir }}',
      default: '',
      hint: 'str',
      added: '2.10.0',
      sensitive: false,
      deprecated: false,
      order: 3,
    }
    _paperless_ngx_cfg_media_root: {
      section: 'Paths and Folders',
      key: 'PAPERLESS_MEDIA_ROOT',
      raw: '{{ paperless_ngx_cfg_media_root }}',
      default: '/data/media',
      hint: 'str',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 4,
    }
    _paperless_ngx_cfg_staticdir: {
      section: 'Paths and Folders',
      key: 'PAPERLESS_STATICDIR',
      raw: '{{ paperless_ngx_cfg_staticdir }}',
      default: '../static',
      hint: 'str',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 5,
    }
    _paperless_ngx_cfg_filename_format: {
      section: 'Paths and Folders',
      key: 'PAPERLESS_FILENAME_FORMAT',
      raw: '{{ paperless_ngx_cfg_filename_format }}',
      default: !unsafe '',
      role_unset:
        '{{ true if paperless_ngx_cfg_filename_format == "" else false }}',
      hint: 'str',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 6,
    }
    _paperless_ngx_cfg_filename_format_remove_none: {
      section: 'Paths and Folders',
      key: 'PAPERLESS_FILENAME_FORMAT_REMOVE_NONE',
      raw: '{{ paperless_ngx_cfg_filename_format_remove_none }}',
      default: false,
      hint: 'bool',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 7,
    }
    _paperless_ngx_cfg_logging_dir: {
      section: 'Paths and Folders',
      key: 'PAPERLESS_LOGGING_DIR',
      raw: '{{ paperless_ngx_cfg_logging_dir }}',
      default: '{{ paperless_ngx_cfg_data_dir ~ "/log" }}',
      hint: 'str',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 8,
    }
    _paperless_ngx_cfg_nltk_dir: {
      section: 'Paths and Folders',
      key: 'PAPERLESS_NLTK_DIR',
      raw: '{{ paperless_ngx_cfg_nltk_dir }}',
      default: '/usr/share/nltk_data',
      hint: 'str',
      added: '1.11.0',
      sensitive: false,
      deprecated: false,
      order: 9,
    }
    _paperless_ngx_cfg_model_file: {
      section: 'Paths and Folders',
      key: 'PAPERLESS_MODEL_FILE',
      raw: '{{ paperless_ngx_cfg_model_file }}',
      default:
        '{{ paperless_ngx_cfg_data_dir ~ "/classification_model.pickle" }}',
      hint: 'str',
      added: '2.9.0',
      sensitive: false,
      deprecated: false,
      order: 10,
    }
    _paperless_ngx_cfg_logrotate_max_size: {
      section: 'Logging',
      key: 'PAPERLESS_LOGROTATE_MAX_SIZE',
      raw: '{{ paperless_ngx_cfg_logrotate_max_size }}',
      default: 1,
      hint: 'int',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 1,
    }
    _paperless_ngx_cfg_logrotate_max_backups: {
      section: 'Logging',
      key: 'PAPERLESS_LOGROTATE_MAX_BACKUPS',
      raw: '{{ paperless_ngx_cfg_logrotate_max_backups }}',
      default: 20,
      hint: 'int',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 2,
    }
    _paperless_ngx_cfg_secret_key: {
      section: 'Hosting and Security',
      key: 'PAPERLESS_SECRET_KEY',
      raw: '{{ paperless_ngx_cfg_secret_key }}',
      default: '{{
          lookup("ansible.builtin.password",
                 "/dev/null",
                 chars=["ascii_lowercase", "ascii_uppercase", "digits"],
                 length=50)
        }}',
      hint: 'str',
      added: '0.0.0',
      sensitive: true,
      deprecated: false,
      order: 1,
    }
    _paperless_ngx_cfg_url: {
      section: 'Hosting and Security',
      key: 'PAPERLESS_URL',
      raw: '{{ paperless_ngx_cfg_url }}',
      default: '',
      hint: 'str',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 2,
    }
    _paperless_ngx_cfg_csrf_trusted_origins: {
      section: 'Hosting and Security',
      key: 'PAPERLESS_CSRF_TRUSTED_ORIGINS',
      raw: '{{ paperless_ngx_cfg_csrf_trusted_origins }}',
      data: '{{ paperless_ngx_cfg_csrf_trusted_origins | join(",") }}',
      default: [],
      hint: 'list of str',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 3,
    }
    _paperless_ngx_cfg_allowed_hosts: {
      section: 'Hosting and Security',
      key: 'PAPERLESS_ALLOWED_HOSTS',
      raw: '{{ paperless_ngx_cfg_allowed_hosts }}',
      data: '{{ paperless_ngx_cfg_allowed_hosts | join(",") }}',
      default: ['*'],
      hint: 'list of str',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 4,
    }
    _paperless_ngx_cfg_cors_allowed_hosts: {
      section: 'Hosting and Security',
      key: 'PAPERLESS_CORS_ALLOWED_HOSTS',
      raw: '{{ paperless_ngx_cfg_cors_allowed_hosts }}',
      data: '{{ paperless_ngx_cfg_cors_allowed_hosts | join(",") }}',
      default: ['http://localhost:8000'],
      hint: 'list of str',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 5,
    }
    _paperless_ngx_cfg_trusted_proxies: {
      section: 'Hosting and Security',
      key: 'PAPERLESS_TRUSTED_PROXIES',
      raw: '{{ paperless_ngx_cfg_trusted_proxies }}',
      data: '{{ paperless_ngx_cfg_trusted_proxies | join(",") }}',
      default: [],
      hint: 'list of str',
      added: '1.14.0',
      sensitive: false,
      deprecated: false,
      order: 6,
    }
    _paperless_ngx_cfg_force_script_name: {
      section: 'Hosting and Security',
      key: 'PAPERLESS_FORCE_SCRIPT_NAME',
      raw: '{{ paperless_ngx_cfg_force_script_name }}',
      default: '',
      role_unset:
        '{{ true if paperless_ngx_cfg_force_script_name == "" else false }}',
      hint: 'str',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 7,
    }
    _paperless_ngx_cfg_static_url: {
      section: 'Hosting and Security',
      key: 'PAPERLESS_STATIC_URL',
      raw: '{{ paperless_ngx_cfg_static_url }}',
      default: '/static/',
      hint: 'str',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 8,
    }
    _paperless_ngx_cfg_auto_login_username: {
      section: 'Hosting and Security',
      key: 'PAPERLESS_AUTO_LOGIN_USERNAME',
      raw: '{{ paperless_ngx_cfg_auto_login_username }}',
      default: '',
      role_unset:
        '{{ true if paperless_ngx_cfg_auto_login_username == "" else false }}',
      hint: 'str',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 9,
    }
    _paperless_ngx_cfg_admin_user: {
      section: 'Hosting and Security',
      key: 'PAPERLESS_ADMIN_USER',
      raw: '{{ paperless_ngx_cfg_admin_user }}',
      default: 'paperless',
      hint: 'str',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 10,
    }
    _paperless_ngx_cfg_admin_mail: {
      section: 'Hosting and Security',
      key: 'PAPERLESS_ADMIN_MAIL',
      raw: '{{ paperless_ngx_cfg_admin_mail }}',
      default: 'root@localhost',
      hint: 'str',
      added: '0.0.0',
      sensitive: true,
      deprecated: false,
      order: 11,
    }
    _paperless_ngx_cfg_admin_password: {
      section: 'Hosting and Security',
      key: 'PAPERLESS_ADMIN_PASSWORD',
      raw: '{{ paperless_ngx_cfg_admin_password }}',
      default: 'paperless',
      hint: 'str',
      added: '0.0.0',
      sensitive: true,
      deprecated: false,
      order: 12,
    }
    _paperless_ngx_cfg_cookie_prefix: {
      section: 'Hosting and Security',
      key: 'PAPERLESS_COOKIE_PREFIX',
      raw: '{{ paperless_ngx_cfg_cookie_prefix }}',
      default: '',
      hint: 'str',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 13,
    }
    _paperless_ngx_cfg_enable_http_remote_user: {
      section: 'Hosting and Security',
      key: 'PAPERLESS_ENABLE_HTTP_REMOTE_USER',
      raw: '{{ paperless_ngx_cfg_enable_http_remote_user }}',
      default: false,
      hint: 'bool',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 14,
    }
    _paperless_ngx_cfg_enable_http_remote_user_api: {
      section: 'Hosting and Security',
      key: 'PAPERLESS_ENABLE_HTTP_REMOTE_USER_API',
      raw: '{{ paperless_ngx_cfg_enable_http_remote_user_api }}',
      default: false,
      hint: 'bool',
      added: '2.5.0',
      sensitive: false,
      deprecated: false,
      order: 15,
    }
    _paperless_ngx_cfg_http_remote_user_header_name: {
      section: 'Hosting and Security',
      key: 'PAPERLESS_HTTP_REMOTE_USER_HEADER_NAME',
      raw: '{{ paperless_ngx_cfg_http_remote_user_header_name }}',
      default: 'HTTP_REMOTE_USER',
      hint: 'str',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 16,
    }
    _paperless_ngx_cfg_logout_redirect_url: {
      section: 'Hosting and Security',
      key: 'PAPERLESS_LOGOUT_REDIRECT_URL',
      raw: '{{ paperless_ngx_cfg_logout_redirect_url }}',
      default: '',
      role_unset:
        '{{ true if paperless_ngx_cfg_logout_redirect_url == "" else false }}',
      hint: 'str',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 17,
    }
    _paperless_ngx_cfg_use_x_forward_host: {
      section: 'Hosting and Security',
      key: 'PAPERLESS_USE_X_FORWARD_HOST',
      raw: '{{ paperless_ngx_cfg_use_x_forward_host }}',
      default: false,
      hint: 'bool',
      added: '1.14.0',
      sensitive: false,
      deprecated: false,
      order: 18,
    }
    _paperless_ngx_cfg_use_x_forward_port: {
      section: 'Hosting and Security',
      key: 'PAPERLESS_USE_X_FORWARD_PORT',
      raw: '{{ paperless_ngx_cfg_use_x_forward_port }}',
      default: false,
      hint: 'bool',
      added: '1.14.0',
      sensitive: false,
      deprecated: false,
      order: 19,
    }
    _paperless_ngx_cfg_proxy_ssl_header: {
      section: 'Hosting and Security',
      key: 'PAPERLESS_PROXY_SSL_HEADER',
      raw: '{{ paperless_ngx_cfg_proxy_ssl_header }}',
      data: '{{
          [paperless_ngx_cfg_proxy_ssl_header.header,
           paperless_ngx_cfg_proxy_ssl_header.raw] | to_json
          if paperless_ngx_cfg_proxy_ssl_header | length > 0 else
          ""
        }}',
      default: {},
      role_unset:
        '{{ true if paperless_ngx_cfg_proxy_ssl_header == {} else false }}',
      hint: 'json',  # (dict) JSON.
      added: '1.14.0',
      sensitive: false,
      deprecated: false,
      order: 20,
    }
    _paperless_ngx_cfg_email_certificate_location: {
      section: 'Hosting and Security',
      key: 'PAPERLESS_EMAIL_CERTIFICATE_LOCATION',
      raw: '{{ paperless_ngx_cfg_email_certificate_location }}',
      default: '',
      role_unset: '{{
          true if paperless_ngx_cfg_email_certificate_location == "" else false
        }}',
      hint: 'str',
      added: '2.0.0',
      sensitive: false,
      deprecated: false,
      order: 21,
    }
    _paperless_ngx_cfg_account_allow_signups: {
      section: 'Authentication and SSO',
      key: 'PAPERLESS_ACCOUNT_ALLOW_SIGNUPS',
      raw: '{{ paperless_ngx_cfg_account_allow_signups }}',
      default: false,
      hint: 'bool',
      added: '2.5.0',
      sensitive: false,
      deprecated: false,
      order: 1,
    }
    _paperless_ngx_cfg_account_default_groups: {
      section: 'Authentication and SSO',
      key: 'PAPERLESS_ACCOUNT_DEFAULT_GROUPS',
      raw: '{{ paperless_ngx_cfg_account_default_groups }}',
      data: '{{ paperless_ngx_cfg_account_default_groups | join(",") }}',
      default: [],
      role_unset: '{{
          true if paperless_ngx_cfg_account_default_groups == [] else false
        }}',
      hint: 'list of str',
      added: '2.15.0',
      sensitive: false,
      deprecated: false,
      order: 2,
    }
    _paperless_ngx_cfg_socialaccount_providers: {
      section: 'Authentication and SSO',
      key: 'PAPERLESS_SOCIALACCOUNT_PROVIDERS',
      raw: '{{ paperless_ngx_cfg_socialaccount_providers }}',
      data: '{{ paperless_ngx_cfg_socialaccount_providers | to_json }}',
      default: '',
      role_unset: '{{
          true if paperless_ngx_cfg_socialaccount_providers == "" else false
        }}',
      hint: 'json',  # (str) JSON.
      added: '2.5.0',
      sensitive: false,
      deprecated: false,
      order: 3,
    }
    _paperless_ngx_cfg_social_auto_signup: {
      section: 'Authentication and SSO',
      key: 'PAPERLESS_SOCIAL_AUTO_SIGNUP',
      raw: '{{ paperless_ngx_cfg_social_auto_signup }}',
      default: false,
      hint: 'bool',
      added: '2.5.0',
      sensitive: false,
      deprecated: false,
      order: 4,
    }
    _paperless_ngx_cfg_socialaccount_allow_signups: {
      section: 'Authentication and SSO',
      key: 'PAPERLESS_SOCIALACCOUNT_ALLOW_SIGNUPS',
      raw: '{{ paperless_ngx_cfg_socialaccount_allow_signups }}',
      default: true,
      hint: 'bool',
      added: '2.5.0',
      sensitive: false,
      deprecated: false,
      order: 5,
    }
    _paperless_ngx_cfg_social_account_sync_groups: {
      section: 'Authentication and SSO',
      key: 'PAPERLESS_SOCIAL_ACCOUNT_SYNC_GROUPS',
      raw: '{{ paperless_ngx_cfg_social_account_sync_groups }}',
      default: false,
      hint: 'bool',
      added: '2.15.0',
      sensitive: false,
      deprecated: false,
      order: 6,
    }
    _paperless_ngx_cfg_social_account_default_groups: {
      section: 'Authentication and SSO',
      key: 'PAPERLESS_SOCIAL_ACCOUNT_DEFAULT_GROUPS',
      raw: '{{ paperless_ngx_cfg_social_account_default_groups }}',
      data:
        '{{ paperless_ngx_cfg_social_account_default_groups | join(",") }}',
      default: [],
      role_unset: '{{
          true
          if paperless_ngx_cfg_social_account_default_groups == [] else
          false
        }}',
      hint: 'list of str',
      added: '2.15.0',
      sensitive: false,
      deprecated: false,
      order: 7,
    }
    _paperless_ngx_cfg_account_default_http_protocol: {
      section: 'Authentication and SSO',
      key: 'PAPERLESS_ACCOUNT_DEFAULT_HTTP_PROTOCOL',
      raw: '{{ paperless_ngx_cfg_account_default_http_protocol }}',
      default: 'https',
      hint: 'str',
      added: '2.5.0',
      sensitive: false,
      deprecated: false,
      order: 8,
    }
    _paperless_ngx_cfg_account_email_verification: {
      section: 'Authentication and SSO',
      key: 'PAPERLESS_ACCOUNT_EMAIL_VERIFICATION',
      raw: '{{ paperless_ngx_cfg_account_email_verification }}',
      default: 'none',
      hint: 'str',
      added: '2.6.0',
      sensitive: false,
      deprecated: false,
      order: 9,
    }
    _paperless_ngx_cfg_account_email_unknown_accounts: {
      section: 'Authentication and SSO',
      key: 'PAPERLESS_ACCOUNT_EMAIL_UNKNOWN_ACCOUNTS',
      raw: '{{ paperless_ngx_cfg_account_email_unknown_accounts }}',
      default: true,
      hint: 'bool',
      added: '2.16.0',
      sensitive: false,
      deprecated: false,
      order: 10,
    }
    _paperless_ngx_cfg_disable_regular_login: {
      section: 'Authentication and SSO',
      key: 'PAPERLESS_DISABLE_REGULAR_LOGIN',
      raw: '{{ paperless_ngx_cfg_disable_regular_login }}',
      default: false,
      hint: 'bool',
      added: '2.6.0',
      sensitive: false,
      deprecated: false,
      order: 11,
    }
    _paperless_ngx_cfg_paperless_redirect_login_to_sso: {
      section: 'Authentication and SSO',
      key: 'PAPERLESS_REDIRECT_LOGIN_TO_SSO',
      raw: '{{ paperless_ngx_cfg_paperless_redirect_login_to_sso }}',
      default: false,
      hint: 'bool',
      added: '2.12.0',
      sensitive: false,
      deprecated: false,
      order: 12,
    }
    _paperless_ngx_cfg_paperless_account_session_remember: {
      section: 'Authentication and SSO',
      key: 'PAPERLESS_ACCOUNT_SESSION_REMEMBER',
      raw: '{{ paperless_ngx_cfg_paperless_account_session_remember }}',
      default: true,
      hint: 'bool',
      added: '2.7.0',
      sensitive: false,
      deprecated: false,
      order: 13,
    }
    _paperless_ngx_cfg_paperless_session_cookie_age: {
      section: 'Authentication and SSO',
      key: 'PAPERLESS_SESSION_COOKIE_AGE',
      raw: '{{ paperless_ngx_cfg_paperless_session_cookie_age }}',
      default: 1209600,
      hint: 'int',
      added: '2.12.0',
      sensitive: false,
      deprecated: false,
      order: 14,
    }
    _paperless_ngx_cfg_ocr_language: {
      section: 'OCR Settings',
      key: 'PAPERLESS_OCR_LANGUAGE',
      raw: '{{ paperless_ngx_cfg_ocr_language }}',
      data: '{{ paperless_ngx_cfg_ocr_language | join("+") }}',
      default: ['eng'],
      role_packages: '{{
        paperless_ngx_cfg_ocr_language |
        map("regex_replace", "^(.*)$", "tesseract-ocr-\1") | list
      }}',
      role_unset:
        '{{ true if paperless_ngx_cfg_ocr_language == [] else false }}',
      hint: 'list of str',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 1,
    }
    _paperless_ngx_cfg_ocr_mode: {
      section: 'OCR Settings',
      key: 'PAPERLESS_OCR_MODE',
      raw: '{{ paperless_ngx_cfg_ocr_mode | lower }}',
      default: 'skip',
      hint: 'str',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 2,
    }
    _paperless_ngx_cfg_ocr_skip_archive_file: {
      section: 'OCR Settings',
      key: 'PAPERLESS_OCR_SKIP_ARCHIVE_FILE',
      raw: '{{ paperless_ngx_cfg_ocr_skip_archive_file | lower }}',
      default: 'never',
      hint: 'str',
      added: '1.14.0',
      sensitive: false,
      deprecated: false,
      order: 3,
    }
    _paperless_ngx_cfg_ocr_clean: {
      section: 'OCR Settings',
      key: 'PAPERLESS_OCR_CLEAN',
      raw: '{{ paperless_ngx_cfg_ocr_clean | lower }}',
      default: 'clean',
      hint: 'str',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 4,
    }
    _paperless_ngx_cfg_ocr_deskew: {
      section: 'OCR Settings',
      key: 'PAPERLESS_OCR_DESKEW',
      raw: '{{ paperless_ngx_cfg_ocr_deskew }}',
      default: true,
      hint: 'bool',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 5,
    }
    _paperless_ngx_cfg_ocr_rotate_pages: {
      section: 'OCR Settings',
      key: 'PAPERLESS_OCR_ROTATE_PAGES',
      raw: '{{ paperless_ngx_cfg_ocr_rotate_pages }}',
      default: true,
      hint: 'bool',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 6,
    }
    _paperless_ngx_cfg_ocr_rotate_pages_threshold: {
      section: 'OCR Settings',
      key: 'PAPERLESS_OCR_ROTATE_PAGES_THRESHOLD',
      raw: '{{ paperless_ngx_cfg_ocr_rotate_pages_threshold | lower }}',
      default: 12,
      hint: 'int',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 7,
    }
    _paperless_ngx_cfg_ocr_output_type: {
      section: 'OCR Settings',
      key: 'PAPERLESS_OCR_OUTPUT_TYPE',
      raw: '{{ paperless_ngx_cfg_ocr_output_type | lower }}',
      default: 'pdfa',
      hint: 'str',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 8,
    }
    _paperless_ngx_cfg_ocr_pages: {
      section: 'OCR Settings',
      key: 'PAPERLESS_OCR_PAGES',
      raw: '{{ paperless_ngx_cfg_ocr_pages }}',
      default: 0,
      role_unset: '{{ true if paperless_ngx_cfg_ocr_pages == 0 else false }}',
      hint: 'int',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 9,
    }
    _paperless_ngx_cfg_ocr_image_dpi: {
      section: 'OCR Settings',
      key: 'PAPERLESS_OCR_IMAGE_DPI',
      raw: '{{ paperless_ngx_cfg_ocr_image_dpi }}',
      default: 600,
      role_unset: '{{
          true if paperless_ngx_cfg_ocr_image_dpi == 0 else false
        }}',
      hint: 'int',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 10,
    }
    _paperless_ngx_cfg_ocr_max_image_pixels: {
      section: 'OCR Settings',
      key: 'PAPERLESS_OCR_MAX_IMAGE_PIXELS',
      raw: '{{ paperless_ngx_cfg_ocr_max_image_pixels }}',
      default: 89478485,
      role_unset: '{{
          true if paperless_ngx_cfg_ocr_max_image_pixels == -1 else false
        }}',
      hint: 'int',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 11,
    }
    _paperless_ngx_cfg_ocr_color_conversion_strategy: {
      section: 'OCR Settings',
      key: 'PAPERLESS_OCR_COLOR_CONVERSION_STRATEGY',
      raw: '{{ paperless_ngx_cfg_ocr_color_conversion_strategy }}',
      default: 'RGB',
      hint: 'str',
      added: '2.1.0',
      sensitive: false,
      deprecated: false,
      order: 12,
    }
    _paperless_ngx_cfg_ocr_user_args: {
      section: 'OCR Settings',
      key: 'PAPERLESS_OCR_USER_ARGS',
      raw: '{{ paperless_ngx_cfg_ocr_user_args }}',
      data: '{{ paperless_ngx_cfg_ocr_user_args | to_json }}',
      default: {"optimize": 1, "jbig2_lossy": false},
      hint: 'json',  # (dict) JSON.
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 13,
    }
    _paperless_ngx_cfg_task_workers: {
      section: 'Software Tweaks',
      key: 'PAPERLESS_TASK_WORKERS',
      raw: '{{ paperless_ngx_cfg_task_workers }}',
      default: 1,
      hint: 'int',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 1,
    }
    _paperless_ngx_cfg_threads_per_worker: {
      section: 'Software Tweaks',
      key: 'PAPERLESS_THREADS_PER_WORKER',
      raw: '{{ paperless_ngx_cfg_threads_per_worker }}',
      default: 0,
      role_unset: '{{
          true if paperless_ngx_cfg_threads_per_worker == 0 else false
        }}',
      hint: 'int',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 2,
    }
    _paperless_ngx_cfg_worker_timeout: {
      section: 'Software Tweaks',
      key: 'PAPERLESS_WORKER_TIMEOUT',
      raw: '{{ paperless_ngx_cfg_worker_timeout }}',
      default: 1800,
      hint: 'int',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 3,
    }
    _paperless_ngx_cfg_time_zone: {
      section: 'Software Tweaks',
      key: 'PAPERLESS_TIME_ZONE',
      raw: '{{ paperless_ngx_cfg_time_zone }}',
      default: 'UTC',
      hint: 'str',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 4,
    }
    _paperless_ngx_cfg_enable_nltk: {
      section: 'Software Tweaks',
      key: 'PAPERLESS_ENABLE_NLTK',
      raw: '{{ paperless_ngx_cfg_enable_nltk }}',
      default: true,
      hint: 'bool as int',
      added: '1.11.0',
      sensitive: false,
      deprecated: false,
      order: 5,
    }
    _paperless_ngx_cfg_date_parser_languages: {
      section: 'Software Tweaks',
      key: 'PAPERLESS_DATE_PARSER_LANGUAGES',
      raw: '{{ paperless_ngx_cfg_date_parser_languages }}',
      data: '{{ paperless_ngx_cfg_date_parser_languages | join("+") }}',
      default: [],
      hint: 'list of str',
      added: '2.18.0',
      sensitive: false,
      deprecated: false,
      order: 6,
    }
    _paperless_ngx_cfg_email_task_cron: {
      section: 'Software Tweaks',
      key: 'PAPERLESS_EMAIL_TASK_CRON',
      raw: '{{ paperless_ngx_cfg_email_task_cron }}',
      default: '*/10 * * * *',
      hint: 'str',
      added: '1.12.0',
      sensitive: false,
      deprecated: false,
      order: 7,
    }
    _paperless_ngx_cfg_train_task_cron: {
      section: 'Software Tweaks',
      key: 'PAPERLESS_TRAIN_TASK_CRON',
      raw: '{{ paperless_ngx_cfg_train_task_cron }}',
      default: '5 */1 * * *',
      hint: 'str',
      added: '1.12.0',
      sensitive: false,
      deprecated: false,
      order: 8,
    }
    _paperless_ngx_cfg_index_task_cron: {
      section: 'Software Tweaks',
      key: 'PAPERLESS_INDEX_TASK_CRON',
      raw: '{{ paperless_ngx_cfg_index_task_cron }}',
      default: '0 0 * * *',
      hint: 'str',
      added: '1.12.0',
      sensitive: false,
      deprecated: false,
      order: 9,
    }
    _paperless_ngx_cfg_sanity_task_cron: {
      section: 'Software Tweaks',
      key: 'PAPERLESS_SANITY_TASK_CRON',
      raw: '{{ paperless_ngx_cfg_sanity_task_cron }}',
      default: '30 0 * * sun',
      hint: 'str',
      added: '1.12.0',
      sensitive: false,
      deprecated: false,
      order: 10,
    }
    _paperless_ngx_cfg_enable_compression: {
      section: 'Software Tweaks',
      key: 'PAPERLESS_ENABLE_COMPRESSION',
      raw: '{{ paperless_ngx_cfg_enable_compression }}',
      default: true,
      hint: 'bool as int',
      added: '1.13.0',
      sensitive: false,
      deprecated: false,
      order: 11,
    }
    _paperless_ngx_cfg_convert_memory_limit: {
      section: 'Software Tweaks',
      key: 'PAPERLESS_CONVERT_MEMORY_LIMIT',
      raw: '{{ paperless_ngx_cfg_convert_memory_limit }}',
      default: 0,
      hint: 'int',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 12,
    }
    _paperless_ngx_cfg_convert_tmpdir: {
      section: 'Software Tweaks',
      key: 'PAPERLESS_CONVERT_TMPDIR',
      raw: '{{ paperless_ngx_cfg_convert_tmpdir }}',
      default: '/tmp',
      role_unset:
        '{{ true if paperless_ngx_cfg_convert_tmpdir == "" else false }}',
      hint: 'str',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 13,
    }
    _paperless_ngx_cfg_paperless_apps: {
      section: 'Software Tweaks',
      key: 'PAPERLESS_APPS',
      raw: '{{ paperless_ngx_cfg_paperless_apps }}',
      data: '{{ paperless_ngx_cfg_paperless_apps | join(",") }}',
      default: [],
      role_unset:
        '{{ true if paperless_ngx_cfg_paperless_apps == [] else false }}',
      hint: 'list of str',
      added: '2.5.0',
      sensitive: false,
      deprecated: false,
      order: 14,
    }
    _paperless_ngx_cfg_max_image_pixels: {
      section: 'Software Tweaks',
      key: 'PAPERLESS_MAX_IMAGE_PIXELS',
      raw: '{{ paperless_ngx_cfg_max_image_pixels }}',
      default: 0,  # Decision: Force disabled (0) instead of None (-1).
      role_unset: '{{
          true if paperless_ngx_cfg_max_image_pixels == -1 else false
        }}',
      hint: 'int',
      added: '2.6.0',
      sensitive: false,
      deprecated: false,
      order: 15,
    }
    # PAPERLESS_CONSUMER_DISABLE is docker-only option. Ignore.
    _paperless_ngx_cfg_consumer_delete_duplicates: {
      section: 'Document Consumption',
      key: 'PAPERLESS_CONSUMER_DELETE_DUPLICATES',
      raw: '{{ paperless_ngx_cfg_consumer_delete_duplicates }}',
      default: false,
      hint: 'bool',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 1,
    }
    _paperless_ngx_cfg_consumer_recursive: {
      section: 'Document Consumption',
      key: 'PAPERLESS_CONSUMER_RECURSIVE',
      raw: '{{ paperless_ngx_cfg_consumer_recursive }}',
      default: false,
      hint: 'bool',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 2,
    }
    _paperless_ngx_cfg_consumer_subdirs_as_tags: {
      section: 'Document Consumption',
      key: 'PAPERLESS_CONSUMER_SUBDIRS_AS_TAGS',
      raw: '{{ paperless_ngx_cfg_consumer_subdirs_as_tags }}',
      default: false,
      hint: 'bool',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 3,
    }
    _paperless_ngx_cfg_consumer_ignore_patterns: {
      section: 'Document Consumption',
      key: 'PAPERLESS_CONSUMER_IGNORE_PATTERNS',
      raw: '{{ paperless_ngx_cfg_consumer_ignore_patterns }}',
      data: '{{ paperless_ngx_cfg_consumer_ignore_patterns | to_json }}',
      default: ['.DS_Store/*', '.DS_STORE/*', '._*', '.stfolder/*',
                '.stversions/*', '.localized/*', desktop.ini', '@eaDir/*',
                'Thumbs.db'],
      hint: 'json',  # (list of str) JSON.
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 4,
    }
    _paperless_ngx_cfg_consumer_barcode_scanner: {
      section: 'Document Consumption',
      key: 'PAPERLESS_CONSUMER_BARCODE_SCANNER',
      raw: '{{ paperless_ngx_cfg_consumer_barcode_scanner | upper }}',
      default: 'ZXING',
      hint: 'str',
      added: '1.14.0',
      sensitive: false,
      deprecated: false,
      order: 5,
    }
    _paperless_ngx_cfg_pre_consume_script: {
      section: 'Document Consumption',
      key: 'PAPERLESS_PRE_CONSUME_SCRIPT',
      raw: '{{ paperless_ngx_cfg_pre_consume_script }}',
      default: '',
      role_unset:
        '{{ true if paperless_ngx_cfg_pre_consume_script == "" else false }}',
      hint: 'str',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 6,
    }
    _paperless_ngx_cfg_post_consume_script: {
      section: 'Document Consumption',
      key: 'PAPERLESS_POST_CONSUME_SCRIPT',
      raw: '{{ paperless_ngx_cfg_post_consume_script }}',
      default: '',
      role_unset:
        '{{ true if paperless_ngx_cfg_pre_consume_script == "" else false }}',
      hint: 'str',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 7,
    }
    _paperless_ngx_cfg_filename_date_order: {
      section: 'Document Consumption',
      key: 'PAPERLESS_FILENAME_DATE_ORDER',
      raw: '{{ paperless_ngx_cfg_filename_date_order }}',
      default: 'YMD',
      role_unset:
        '{{ true if paperless_ngx_cfg_filename_date_order == "" else false }}',
      hint: 'str',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 8,
    }
    _paperless_ngx_cfg_number_of_suggested_dates: {
      section: 'Document Consumption',
      key: 'PAPERLESS_NUMBER_OF_SUGGESTED_DATES',
      raw: '{{ paperless_ngx_cfg_number_of_suggested_dates }}',
      default: 3,
      hint: 'int',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 9,
    }
    _paperless_ngx_cfg_thumbnail_font_name: {
      section: 'Document Consumption',
      key: 'PAPERLESS_THUMBNAIL_FONT_NAME',
      raw: '{{ paperless_ngx_cfg_thumbnail_font_name }}',
      default: '/usr/share/fonts/liberation/LiberationSerif-Regular.ttf',
      hint: 'str',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 10,
    }
    _paperless_ngx_cfg_ignore_dates: {
      section: 'Document Consumption',
      key: 'PAPERLESS_IGNORE_DATES',
      raw: '{{ paperless_ngx_cfg_ignore_dates }}',
      data: '{{ paperless_ngx_cfg_ignore_dates | join(",") }}',
      default: [],
      hint: 'list of str',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 11,
    }
    _paperless_ngx_cfg_date_order: {
      section: 'Document Consumption',
      key: 'PAPERLESS_DATE_ORDER',
      raw: '{{ paperless_ngx_cfg_date_order }}',
      default: 'DMY',
      hint: 'str',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 12,
    }
    _paperless_ngx_cfg_enable_gpg_decryptor: {
      section: 'Document Consumption',
      key: 'PAPERLESS_ENABLE_GPG_DECRYPTOR',
      raw: '{{ paperless_ngx_cfg_enable_gpg_decryptor }}',
      default: false,
      hint: 'bool',
      added: '2.12.0',
      sensitive: false,
      deprecated: false,
      order: 13,
    }
    _paperless_ngx_cfg_webhooks_allowed_schemes: {
      section: 'Workflow Webhooks',
      key: 'PAPERLESS_WEBHOOKS_ALLOWED_SCHEMES',
      raw: '{{ paperless_ngx_cfg_webhooks_allowed_schemes }}',
      data: '{{ paperless_ngx_cfg_webhooks_allowed_schemes | join(",") }}',
      default: ['http', 'https'],
      hint: 'list of str',
      added: '2.18.0',
      sensitive: false,
      deprecated: false,
      order: 1,
    }
    _paperless_ngx_cfg_webhooks_allowed_ports: {
      section: 'Workflow Webhooks',
      key: 'PAPERLESS_WEBHOOKS_ALLOWED_PORTS',
      raw: '{{ paperless_ngx_cfg_webhooks_allowed_ports }}',
      data: '{{ paperless_ngx_cfg_webhooks_allowed_ports | join(",") }}',
      default: [],
      hint: 'list of int',
      added: '2.18.0',
      sensitive: false,
      deprecated: false,
      order: 2,
    }
    _paperless_srv_webhooks_allow_internal_requests: {
      section: 'Workflow Webhooks',
      key: 'paperless_srv_webhooks_allow_internal_requests',
      raw: '{{ paperless_srv_webhooks_allow_internal_requests }}',
      default: true,
      hint: 'bool',
      added: '2.18.0',
      sensitive: false,
      deprecated: false,
      order: 3,
    }
    _paperless_ngx_cfg_consumer_polling: {
      section: 'Polling',
      key: 'PAPERLESS_CONSUMER_POLLING',
      raw: '{{ paperless_ngx_cfg_consumer_polling }}',
      default: 0,
      hint: 'int',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 1,
    }
    _paperless_ngx_cfg_consumer_polling_retry_count: {
      section: 'Polling',
      key: 'PAPERLESS_CONSUMER_POLLING_RETRY_COUNT',
      raw: '{{ paperless_ngx_cfg_consumer_polling_retry_count }}',
      default: 5,
      hint: 'int',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 2,
    }
    _paperless_ngx_cfg_consumer_polling_delay: {
      section: 'Polling',
      key: 'PAPERLESS_CONSUMER_POLLING_DELAY',
      raw: '{{ paperless_ngx_cfg_consumer_polling_delay }}',
      default: 5,
      hint: 'int',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 3,
    }
    _paperless_ngx_cfg_consumer_inotify_delay: {
      section: 'Inotify',
      key: 'PAPERLESS_CONSUMER_INOTIFY_DELAY',
      raw: '{{ paperless_ngx_cfg_consumer_inotify_delay }}',
      default: 0.5,
      hint: 'float',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 1,
    }
    _paperless_ngx_cfg_oauth_callback_base_url: {
      section: 'Incoming Mail',
      key: 'PAPERLESS_OAUTH_CALLBACK_BASE_URL',
      raw: '{{ paperless_ngx_cfg_oauth_callback_base_url }}',
      default: '',
      role_unset: '{{
          true if paperless_ngx_cfg_oauth_callback_base_url == "" else false
        }}',
      hint: 'str',
      added: '2.12.0',
      sensitive: false,
      deprecated: false,
      order: 1,
    }
    _paperless_ngx_cfg_gmail_oauth_client_id: {
      section: 'Incoming Mail',
      key: 'PAPERLESS_GMAIL_OAUTH_CLIENT_ID',
      raw: '{{ paperless_ngx_cfg_gmail_oauth_client_id }}',
      default: '',
      role_unset: '{{
          true if paperless_ngx_cfg_gmail_oauth_client_id == "" else false
        }}',
      hint: 'str',
      added: '2.12.0',
      sensitive: false,
      deprecated: false,
      order: 2,
    }
    _paperless_ngx_cfg_gmail_oauth_client_secret: {
      section: 'Incoming Mail',
      key: 'PAPERLESS_GMAIL_OAUTH_CLIENT_SECRET',
      raw: '{{ paperless_ngx_cfg_gmail_oauth_client_secret }}',
      default: '',
      role_unset: '{{
          true if paperless_ngx_cfg_gmail_oauth_client_secret == "" else false
        }}',
      hint: 'str',
      added: '2.12.0',
      sensitive: true,
      deprecated: false,
      order: 3,
    }
    _paperless_ngx_cfg_outlook_oauth_client_id: {
      section: 'Incoming Mail',
      key: 'PAPERLESS_OUTLOOK_OAUTH_CLIENT_ID',
      raw: '{{ paperless_ngx_cfg_outlook_oauth_client_id }}',
      default: '',
      role_unset: '{{
          true if paperless_ngx_cfg_outlook_oauth_client_id == "" else false
        }}',
      hint: 'str',
      added: '2.12.0',
      sensitive: false,
      deprecated: false,
      order: 4,
    }
    _paperless_ngx_cfg_outlook_oauth_client_secret: {
      section: 'Incoming Mail',
      key: 'PAPERLESS_OUTLOOK_OAUTH_CLIENT_SECRET',
      raw: '{{ paperless_ngx_cfg_outlook_oauth_client_secret }}',
      default: '',
      role_unset: '{{
          true
          if paperless_ngx_cfg_outlook_oauth_client_secret == "" else
          false
        }}',
      hint: 'str',
      added: '2.12.0',
      sensitive: true,
      deprecated: false,
      order: 5,
    }
    _paperless_ngx_cfg_email_gnupg_home: {
      section: 'Incoming Mail',
      key: 'PAPERLESS_EMAIL_GNUPG_HOME',
      raw: '{{ paperless_ngx_cfg_email_gnupg_home }}',
      default: '.',
      hint: 'str',
      added: '2.12.0',
      sensitive: false,
      deprecated: false,
      order: 6,
    }
    _paperless_ngx_cfg_consumer_enable_barcodes: {
      section: 'Barcodes',
      key: 'PAPERLESS_CONSUMER_ENABLE_BARCODES',
      raw: '{{ paperless_ngx_cfg_consumer_enable_barcodes }}',
      default: false,
      hint: 'bool',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 1,
    }
    _paperless_ngx_cfg_consumer_barcode_tiff_support: {
      section: 'Barcodes',
      key: 'PAPERLESS_CONSUMER_BARCODE_TIFF_SUPPORT',
      raw: '{{ paperless_ngx_cfg_consumer_barcode_tiff_support }}',
      default: false,
      hint: 'bool',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 2,
    }
    _paperless_ngx_cfg_consumer_barcode_string: {
      section: 'Barcodes',
      key: 'PAPERLESS_CONSUMER_BARCODE_STRING',
      raw: '{{ paperless_ngx_cfg_consumer_barcode_string }}',
      default: 'PATCHT',
      hint: 'str',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 3,
    }
    _paperless_ngx_cfg_consumer_barcode_retain_split_pages: {
      section: 'Barcodes',
      key: 'PAPERLESS_CONSUMER_BARCODE_RETAIN_SPLIT_PAGES',
      raw:
        '{{ paperless_ngx_cfg_consumer_barcode_retain_split_pages }}',
      default: false,
      hint: 'bool',
      added: '2.12.0',
      sensitive: false,
      deprecated: false,
      order: 4,
    }
    _paperless_ngx_cfg_consumer_enable_asn_barcode: {
      section: 'Barcodes',
      key: 'PAPERLESS_CONSUMER_ENABLE_ASN_BARCODE',
      raw: '{{ paperless_ngx_cfg_consumer_enable_asn_barcode }}',
      default: false,
      hint: 'bool',
      added: '1.12.0',
      sensitive: false,
      deprecated: false,
      order: 5,
    }
    _paperless_ngx_cfg_consumer_asn_barcode_prefix: {
      section: 'Barcodes',
      key: 'PAPERLESS_CONSUMER_ASN_BARCODE_PREFIX',
      raw: '{{ paperless_ngx_cfg_consumer_asn_barcode_prefix }}',
      default: 'ASN',
      hint: 'str',
      added: '1.12.0',
      sensitive: false,
      deprecated: false,
      order: 6,
    }
    _paperless_ngx_cfg_consumer_barcode_upscale: {
      section: 'Barcodes',
      key: 'PAPERLESS_CONSUMER_BARCODE_UPSCALE',
      raw: '{{ paperless_ngx_cfg_consumer_barcode_upscale }}',
      default: 0.0,
      hint: 'float',
      added: '1.16.0',
      sensitive: false,
      deprecated: false,
      order: 7,
    }
    _paperless_ngx_cfg_consumer_barcode_dpi: {
      section: 'Barcodes',
      key: 'PAPERLESS_CONSUMER_BARCODE_DPI',
      raw: '{{ paperless_ngx_cfg_consumer_barcode_dpi }}',
      default: 300,
      hint: 'int',
      added: '1.16.0',
      sensitive: false,
      deprecated: false,
      order: 8,
    }
    _paperless_ngx_cfg_consumer_barcode_max_pages: {
      section: 'Barcodes',
      key: 'PAPERLESS_CONSUMER_BARCODE_MAX_PAGES',
      raw: '{{ paperless_ngx_cfg_consumer_barcode_max_pages }}',
      default: 0,
      hint: 'int',
      added: '2.12.0',
      sensitive: false,
      deprecated: false,
      order: 9,
    }
    _paperless_ngx_cfg_consumer_enable_tag_barcode: {
      section: 'Barcodes',
      key: 'PAPERLESS_CONSUMER_ENABLE_TAG_BARCODE',
      raw: '{{ paperless_ngx_cfg_consumer_enable_tag_barcode }}',
      default: false,
      hint: 'bool',
      added: '2.5.0',
      sensitive: false,
      deprecated: false,
      order: 10,
    }
    _paperless_ngx_cfg_consumer_tag_barcode_mapping: {
      section: 'Barcodes',
      key: 'PAPERLESS_CONSUMER_TAG_BARCODE_MAPPING',
      raw: '{{ paperless_ngx_cfg_consumer_tag_barcode_mapping }}',
      data: '{{ paperless_ngx_cfg_consumer_tag_barcode_mapping | to_json }}',
      default: {"TAG:(.*)": "\\g<1>"},
      hint: 'json',  # (dict) JSON.
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 11,
    }
    _paperless_ngx_cfg_audit_log_enabled: {
      section: 'Audit Trails',
      key: 'PAPERLESS_AUDIT_LOG_ENABLED',
      raw: '{{ paperless_ngx_cfg_audit_log_enabled }}',
      default: true,
      hint: 'bool',
      added: '2.0.0',
      sensitive: false,
      deprecated: false,
      order: 1,
    }
    _paperless_ngx_cfg_consumer_enable_collate_double_sided: {
      section: 'Collate Double-sided Documents',
      key: 'PAPERLESS_CONSUMER_ENABLE_COLLATE_DOUBLE_SIDED',
      raw: '{{ paperless_ngx_cfg_consumer_enable_collate_double_sided }}',
      default: false,
      hint: 'bool',
      added: '1.17.0',
      sensitive: false,
      deprecated: false,
      order: 1,
    }
    _paperless_ngx_cfg_consumer_collate_double_sided_subdir_name: {
      section: 'Collate Double-sided Documents',
      key: 'PAPERLESS_CONSUMER_COLLATE_DOUBLE_SIDED_SUBDIR_NAME',
      raw: '{{ paperless_ngx_cfg_consumer_collate_double_sided_subdir_name }}',
      default: 'double-sided',
      role_dest: '',
      hint: 'str',
      added: '1.17.0',
      sensitive: false,
      deprecated: false,
      order: 2,
    }
    _paperless_ngx_cfg_consumer_collate_double_sided_tiff_support: {
      section: 'Collate Double-sided Documents',
      key: 'PAPERLESS_CONSUMER_COLLATE_DOUBLE_SIDED_TIFF_SUPPORT',
      raw: '{{ paperless_ngx_cfg_consumer_collate_double_sided_tiff_support }}',
      default: false,
      hint: 'bool',
      added: '1.17.0',
      sensitive: false,
      deprecated: false,
      order: 3,
    }
    _paperless_ngx_cfg_empty_trash_delay: {
      section: 'Trash',
      key: 'PAPERLESS_EMPTY_TRASH_DELAY',
      raw: '{{ paperless_ngx_cfg_empty_trash_delay }}',
      default: 30,
      hint: 'int',
      added: '2.10.0',
      sensitive: false,
      deprecated: false,
      order: 1,
    }
    _paperless_ngx_cfg_empty_trash_task_cron: {
      section: 'Trash',
      key: 'PAPERLESS_EMPTY_TRASH_TASK_CRON',
      raw: '{{ paperless_ngx_cfg_empty_trash_task_cron }}',
      default: '0 1 * * *',
      hint: 'str',
      added: '2.10.0',
      sensitive: false,
      deprecated: false,
      order: 2,
    }
    _paperless_ngx_cfg_convert_binary: {
      section: 'Binaries',
      key: 'PAPERLESS_CONVERT_BINARY',
      raw: '{{ paperless_ngx_cfg_convert_binary }}',
      default: '/usr/bin/convert',
      hint: 'str',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 1,
    }
    _paperless_ngx_cfg_gs_binary: {
      section: 'Binaries',
      key: 'PAPERLESS_GS_BINARY',
      raw: '{{ paperless_ngx_cfg_gs_binary }}',
      default: '/usr/bin/gs',
      hint: 'str',
      added: '0.0.0',
      sensitive: false,
      deprecated: false,
      order: 2,
    }
    _paperless_ngx_cfg_app_title: {
      section: 'Frontend Settings',
      key: 'PAPERLESS_APP_TITLE',
      raw: '{{ paperless_ngx_cfg_app_title }}',
      default: 'Paperless-ngx',
      hint: 'str',
      added: '2.4.0',
      sensitive: false,
      deprecated: false,
      order: 1,
    }
    _paperless_ngx_cfg_app_logo: {
      section: 'Frontend Settings',
      key: 'PAPERLESS_APP_LOGO',
      raw: '{{ paperless_ngx_cfg_app_logo }}',
      default: '',
      role_unset: '{{ true if paperless_ngx_cfg_app_logo == "" else false }}',
      hint: 'str',
      added: '2.4.0',
      sensitive: false,
      deprecated: false,
      order: 2,
    }
    _paperless_ngx_cfg_enable_update_check: {
      section: 'Frontend Settings',
      key: 'PAPERLESS_ENABLE_UPDATE_CHECK',
      raw: true,
      default: true,
      hint: 'bool',
      added: '1.9.2',
      sensitive: false,
      deprecated: true,  # WebUI auto migrates if variable exists.
      order: 3,
    }
    _paperless_ngx_cfg_email_host: {
      section: 'Email Sending',
      key: 'PAPERLESS_EMAIL_HOST',
      raw: '{{ paperless_ngx_cfg_email_host }}',
      default: 'localhost',
      hint: 'str',
      added: '2.0.0',
      sensitive: false,
      deprecated: false,
      order: 1,
    }
    _paperless_ngx_cfg_email_port: {
      section: 'Email Sending',
      key: 'PAPERLESS_EMAIL_PORT',
      raw: '{{ paperless_ngx_cfg_email_port }}',
      default: 25,
      hint: 'int',
      added: '2.0.0',
      sensitive: false,
      deprecated: false,
      order: 2,
    }
    _paperless_ngx_cfg_email_host_user: {
      section: 'Email Sending',
      key: 'PAPERLESS_EMAIL_HOST_USER',
      raw: '{{ paperless_ngx_cfg_email_host_user }}',
      default: '',
      hint: 'str',
      added: '2.0.0',
      sensitive: false,
      deprecated: false,
      order: 3,
    }
    _paperless_ngx_cfg_email_from: {
      section: 'Email Sending',
      key: 'PAPERLESS_EMAIL_FROM',
      raw: '{{
          paperless_ngx_cfg_email_host_user
          if paperless_ngx_cfg_email_from == "" else
          paperless_ngx_cfg_email_from
        }}',
      default: '',
      hint: 'str',
      added: '2.0.0',
      sensitive: false,
      deprecated: false,
      order: 4,
    }
    _paperless_ngx_cfg_email_host_password: {
      section: 'Email Sending',
      key: 'PAPERLESS_EMAIL_HOST_PASSWORD',
      raw: '{{ paperless_ngx_cfg_email_host_password }}',
      default: '',
      hint: 'str',
      added: '2.0.0',
      sensitive: true,
      deprecated: false,
      order: 5,
    }
    _paperless_ngx_cfg_email_use_tls: {
      section: 'Email Sending',
      key: 'PAPERLESS_EMAIL_USE_TLS',
      raw: '{{ paperless_ngx_cfg_email_use_tls }}',
      default: false,
      hint: 'bool',
      added: '2.0.0',
      sensitive: false,
      deprecated: false,
      order: 6,
    }
    _paperless_ngx_cfg_email_use_ssl: {
      section: 'Email Sending',
      key: 'PAPERLESS_EMAIL_USE_SSL',
      raw: '{{ paperless_ngx_cfg_email_use_ssl }}',
      default: false,
      hint: 'bool',
      added: '2.0.0',
      sensitive: false,
      deprecated: false,
      order: 7,
    }

- name: 'Annotate | update annotations with results'
  ansible.builtin.set_fact:
    _paperless_ngx_cfg_consumer_collate_double_sided_subdir_name: '{{
      _paperless_ngx_cfg_consumer_collate_double_sided_subdir_name |
      combine({"role_dest":
          _paperless_ngx_cfg_consumption_dir.role_dest ~
          _paperless_ngx_cfg_consumer_collate_double_sided_subdir_name.raw
        })
      }}'

- name: 'Annotate | generate directories'
  ansible.builtin.set_fact:
    _paperless_ngx: {
      symlink: '{{ paperless_ngx_role_repo_extract_symlink }}',
      venv_config_dir: '/var/venv',
      venv_name:
        '{{ "paperless-" ~ _paperless_ngx_srv_version.role_major_version }}',
      venv_dir: '{{
          "/var/venv/paperless-" ~
          _paperless_ngx_srv_version.role_major_version
        }}',
    }

- name: 'Annotate | generate config map'
  ansible.builtin.set_fact:
    _paperless_ngx_map: '{{
        hostvars[inventory_hostname] | dict2items |
        selectattr("key", "match", "_paperless_ngx_cfg_*")
      }}'
    _paperless_ngx_order:
      - 'Debug'
      - 'Required Services'
      - 'Optional Services (Tika settings)'
      - 'Email Parsing'
      - 'Paths and Folders'
      - 'Logging'
      - 'Hosting and Security'
      - 'Authentication and SSO'
      - 'OCR Settings'
      - 'Software Tweaks'
      - 'Document Consumption'
      - 'Workflow Webhooks'
      - 'Polling'
      - 'Inotify'
      - 'Incoming Mail'
      - 'Barcodes'
      - 'Audit Trails'
      - 'Collate Double-sided Documents'
      - 'Trash'
      - 'Binaries'
      - 'Frontend Settings'
      - 'Email Sending'
