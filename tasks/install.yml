---
###############################################################################
# Install Packages & Services
###############################################################################
# Install packages, compile JBIG2enc, and download extra NLTK data if needed.
# Create virtual environment with required PIP packages.
#
# Redis is installed with default configuration if enabled.
#
# OCR packages are installed if OCR is enabled, include tesseract OCR data.
#
# JBIG2enc is used for loseless PDF/A compression (not listed in bare-metal
# instructions) but used in Docker configuration which is based on Bookworm.
#
# NLTK is installed and extra data is downloaded if specified.
#
# All database libraries are installed (except sqlite) as they are required
# for the project to run.
#
# Args:
#   _paperless_ngx: dict - Processed internal role settings.
#   _paperless_ngx.tesseract_packages: list of str - Additional OCR packages.
#   _paperless_ngx_ghostscript_binary_url: str - Parsed ghostscript binary url.
#
# Reference:
# * https://docs.paperless-ngx.com/setup/#bare_metal
# * https://redis.io/docs/getting-started/#securing-redis

- name: 'Install | packages'
  ansible.builtin.include_role:
    name: 'r_pufky.deb.apt'
  vars:
    apt_packages:
      - '{{ paperless_ngx_role_python_deps }}'
      - '{{ paperless_ngx_role_packages }}'
      - '{{
          paperless_ngx_role_ocr_my_pdf
          if _paperless_ngx_cfg_ocr_language.raw | length > 0 else
          []
        }}'
      - '{{
          _paperless_ngx.tesseract_packages
          if _paperless_ngx.tesseract_packages | length > 0 else
          []
        }}'
      - '{{ paperless_ngx_role_jbig2enc }}'
      - '{{
          paperless_ngx_role_redis
          if _paperless_ngx_srv_redis_enable.raw else
          []
        }}'
      - '{{
          paperless_ngx_role_sqlite
          if _paperless_ngx_cfg_dbengine.raw | lower == "sqlite" else
          []
        }}'
      - '{{ paperless_ngx_role_custom_packages }}'
    apt_package_update_cache: true

# Don't migrate data as we force users to use external locations.
- name: 'Install | Paperless-NGX {{ _paperless_ngx_srv_version.raw }}'
  ansible.builtin.include_role:
    name: 'r_pufky.deb.repo'
  vars:
    repo_release_owner: '{{ paperless_ngx_role_repo_release_owner }}'
    repo_release_repo: '{{ paperless_ngx_role_repo_release_repo }}'
    repo_release_tag: '{{ _paperless_ngx_srv_version.raw }}'
    repo_release_specifier: '{{ paperless_ngx_role_repo_release_specifier }}'
    repo_release_asset: '{{ paperless_ngx_role_repo_release_asset }}'
    repo_file_owner: '{{ _paperless_ngx_srv_user.raw }}'
    repo_file_group: '{{ _paperless_ngx_srv_group.raw }}'
    repo_force_overwrite: '{{ _paperless_ngx_srv_force_overwrite.raw }}'
    repo_extract_dir: '{{ paperless_ngx_role_repo_extract_dir }}'
    repo_extract_symlink: '{{ _paperless_ngx.symlink }}'
    repo_extract_delete_old_versions:
      '{{ _paperless_ngx_srv_delete_old_versions_enable.raw }}'
    repo_extract_mode: 'a-st,o-rwx'
    repo_extract_extra_opts: '--strip-components=1'
    repo_extract_remove_files:
      - '.dockerignore'
      - '.env'
      - 'docker'
      - 'docs'
      - 'Dockerfile'
      - 'LICENSE'
      - 'README.md'
      - 'data'  # Never store user data in install. Asserted in prep.
      - 'trash'
      - 'consume'
      - 'media'
      - 'nltk'

- name:
    'Install | JBIG2enc {{ _paperless_ngx_srv_jbig2enc_version.raw }}'
  ansible.builtin.include_role:
    name: 'r_pufky.deb.repo'
  vars:
    repo_release_download_source_enable: true
    repo_release_owner: '{{ paperless_ngx_role_jbig2enc_owner }}'
    repo_release_repo: '{{ paperless_ngx_role_jbig2enc_repo }}'
    repo_release_tag: '{{ _paperless_ngx_srv_jbig2enc_version.raw }}'
    repo_release_asset: '{{ paperless_ngx_role_jbig2enc_asset }}'
    repo_extract_dir: '{{ paperless_ngx_role_jbig2enc_extract_dir }}'
    repo_extract_symlink:
      '{{ paperless_ngx_role_jbig2enc_extract_symlink_target }}'
    repo_extract_mode: 'a-st,o-rwx'
    repo_extract_extra_opts: '--strip-components=1'

- name: 'Install | JBIG2enc configuration ðŸ—˜'
  ansible.builtin.debug:
    msg: |
      ðŸ—˜ JBIG2enc is being built. This will take a few minutes.

- name: >
    Install | build JBIG2enc
    {{ _paperless_ngx_srv_jbig2enc_version.raw }}
  when: _repo_changed
  ansible.builtin.shell: >-
      set -o pipefail &&
      ./autogen.sh &&
      ./configure &&
      make install
  args:
    executable: '/bin/bash'
    chdir: '{{ paperless_ngx_role_jbig2enc_extract_symlink_target }}'
  changed_when: _paperless_ngx_jbig2enc_build.rc == 0
  register: _paperless_ngx_jbig2enc_build

- name: >
    Install | Ghostscript
    {{ _paperless_ngx_srv_ghostscript_version.raw }}
  ansible.builtin.include_role:
    name: 'r_pufky.deb.repo'
  vars:
    repo_release_owner: '{{ paperless_ngx_role_ghostscript_owner }}'
    repo_release_repo: '{{ paperless_ngx_role_ghostscript_repo }}'
    repo_release_tag:
      '{{ _paperless_ngx_srv_ghostscript_version.parsed }}'
    repo_release_asset:
      'ghostpdl-{{ _paperless_ngx_srv_ghostscript_version.raw }}.tar.xz'
    repo_extract_dir: '{{ paperless_ngx_role_ghostscript_extract_dir }}'
    repo_extract_symlink:
      '{{ paperless_ngx_role_ghostscript_extract_symlink_target }}'
    repo_extract_mode: 'a-st,o-rwx'
    repo_extract_extra_opts: '--strip-components=1'

- name: 'Install | Ghostscript configuration ðŸ—˜'
  ansible.builtin.debug:
    msg: |
      ðŸ—˜ Ghostscript is being built. This will take a few minutes.

- name: >
    Install | build Ghostscript
    {{ _paperless_ngx_srv_ghostscript_version.raw }}
  when: _repo_changed
  ansible.builtin.shell: >-
      set -o pipefail &&
      ./configure &&
      make &&
      make install
  args:
    executable: '/bin/bash'
    chdir: '{{ paperless_ngx_role_ghostscript_extract_symlink_target }}'
  changed_when: _paperless_ngx_ghostscript_build.rc == 0
  register: _paperless_ngx_ghostscript_build

# TODO(2.17+): Migrate to UV when it is the default manager.
- name: 'Install | create virtual environment'
  ansible.builtin.include_role:
    name: 'r_pufky.deb.avenv'
  vars:
    avenv_config_dir: '{{ _paperless_ngx.config }}'
    avenv_name: '{{ _paperless_ngx.name }}'
    avenv_user: '{{ _paperless_ngx_srv_user.raw }}'
    avenv_group: '{{ _paperless_ngx_srv_group.raw }}'
    avenv_pip_extra_args: '--upgrade'
    avenv_pips: '{{ paperless_ngx_role_nltk_pip }}'
    avenv_pip_requirements_install: '{{ _paperless_ngx.symlink }}'

- name: 'Install | NTLK configuration ðŸ—˜'
  ansible.builtin.debug:
    msg: |
      ðŸ—˜ NTLK data is being downloaded. This will take a few minutes.

- name: 'Install | additional NLTK data'
  when: _paperless_ngx_srv_nltk_data.raw | length > 0
  ansible.builtin.command:
    argv:
      - '{{ _paperless_ngx.dir }}/bin/python3'
      - '-W'
      - 'ignore::RuntimeWarning'
      - '-m'
      - 'nltk.downloader'
      - '-d'
      - '{{ _paperless_ngx_cfg_nltk_dir.raw }}'
      - '{{ _paperless_ngx_srv_nltk_data.parsed }}'
    chdir: '{{ _paperless_ngx.symlink }}/src'
  register: _paperless_ngx_nltk
  changed_when: '"already up-to-date" not in _paperless_ngx_nltk.stderr'
