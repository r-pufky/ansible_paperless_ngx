---
###############################################################################
# Install Paperless-NGX Packages
###############################################################################
# Install packages, compile JBIG2enc, and download extra NLTK data if needed.
# Create virtual environment with required PIP packages.
#
# Redis is installed with default configuration if enabled.
#
# OCR packages are installed if OCR is enabled, include tesseract OCR data.
#
# JBIG2enc is used for loseless PDF/A compression (not listed in bare-metal
# instructions) but used in Docker configuration which is based on Bookworm.
#
# NLTK is installed and extra data is downloaded if specified.
#
# All database libraries are installed (except sqlite) as they are required
# for the project to run.
#
# Args:
#   _paperless_ngx_uid: int - Paperless-NGX user UID.
#   _paperless_ngx_gid: int - Paperless-NGX user GID.
#   _paperless_ngx_tesseract_packages: list of str - additional OCR packages.
#   _paperless_ngx_ghostscript_binary_url: str - parsed ghostscript binary url.
#   _paperless_ngx_ghostscript_release_version: str - release version.
#
# Reference:
# * https://docs.paperless-ngx.com/setup/#bare_metal

- name: 'Install'
  block:
    - name: 'Install | packages'
      ansible.builtin.include_role:
        name: 'r_pufky.srv.apt'
      vars:
        apt_packages:
          - '{{ paperless_ngx_role_python_deps }}'
          - '{{ paperless_ngx_role_packages }}'
          - '{{
              paperless_ngx_role_ocr_my_pdf
              if paperless_ngx_config_ocr_language | length > 0 else
              []
            }}'
          - '{{
              _paperless_ngx_tesseract_packages
              if _paperless_ngx_tesseract_packages | length > 0 else
              []
            }}'
          - '{{ paperless_ngx_role_jbig2enc }}'
          - '{{
              paperless_ngx_role_redis
              if paperless_ngx_service_redis_enable else
              []
            }}'
          - '{{
              paperless_ngx_role_sqlite
              if paperless_ngx_config_dbengine | lower == "sqlite" else
              []
            }}'
          - '{{ paperless_ngx_role_custom_packages }}'
        apt_package_update_cache: true

# Don't migrate data as we force users to use external locations.
- name: 'Install | Paperless-NGX {{ paperless_ngx_service_version }}'
  ansible.builtin.include_role:
    name: 'r_pufky.srv.repo'
  vars:
    repo_release_owner: '{{ paperless_ngx_role_repo_release_owner }}'
    repo_release_repo: '{{ paperless_ngx_role_repo_release_repo }}'
    repo_release_tag: '{{ paperless_ngx_service_version }}'
    repo_release_specifier: '{{ paperless_ngx_role_repo_release_specifier }}'
    repo_release_asset: '{{ paperless_ngx_role_repo_release_asset }}'
    repo_file_owner: '{{ paperless_ngx_user }}'
    repo_file_group: '{{ paperless_ngx_group }}'
    repo_force_overwrite: '{{ paperless_ngx_service_force_overwrite }}'
    repo_extract_dir: '{{ paperless_ngx_role_repo_extract_dir }}'
    repo_extract_symlink: '{{ _paperless_ngx_dir }}'
    repo_extract_delete_old_versions:
      '{{ paperless_ngx_service_delete_old_versions_enable }}'
    repo_extract_mode: 'a-st,o-rwx'
    repo_extract_extra_opts: '--strip-components=1'
    repo_extract_remove_files:
      - '.dockerignore'
      - '.env'
      - 'docker'
      - 'docs'
      - 'Dockerfile'
      - 'LICENSE'
      - 'README.md'
      - 'data'  # Never store user data in install. Asserted in prep.
      - 'trash'
      - 'consume'
      - 'media'
      - 'nltk'

- name: 'Install | JBIG2enc {{ paperless_ngx_role_jbig2enc_version }}'
  ansible.builtin.include_role:
    name: 'r_pufky.srv.repo'
  vars:
    repo_release_owner: '{{ paperless_ngx_role_jbig2enc_owner }}'
    repo_release_repo: '{{ paperless_ngx_role_jbig2enc_repo }}'
    repo_release_tag: '{{ paperless_ngx_role_jbig2enc_version }}'
    repo_release_asset: '{{ paperless_ngx_role_jbig2enc_asset }}'
    repo_extract_dir: '{{ paperless_ngx_role_jbig2enc_extract_dir }}'
    repo_extract_symlink:
      '{{ paperless_ngx_role_jbig2enc_extract_symlink_target }}'
    repo_extract_mode: 'a-st,o-rwx'
    repo_extract_extra_opts: '--strip-components=1'

- name: 'Install | JBIG2enc configuration (may take a while)'
  ansible.builtin.debug:
    msg: |
      JBIG2enc is being built. This will take a few minutes.

- name: 'Install | Build JBIG2enc {{ paperless_ngx_role_jbig2enc_version }}'  # yamllint disable-line rule:line-length
  when: _repo_changed
  ansible.builtin.shell: >-
      set -o pipefail &&
      ./autogen.sh &&
      ./configure &&
      make install
  args:
    executable: '/bin/bash'
    chdir: '{{ paperless_ngx_role_jbig2enc_extract_symlink_target }}'
  changed_when: _paperless_ngx_jbig2enc_build.rc == 0
  register: _paperless_ngx_jbig2enc_build

# Security: CVE-2023-43115
#   CVE:
#   * https://nvd.nist.gov/vuln/detail/cve-2023-43115
#   * https://nvd.nist.gov/vuln/detail/cve-2025-27835
#   * https://nvd.nist.gov/vuln/detail/cve-2025-27832
#   * https://nvd.nist.gov/vuln/detail/cve-2025-27831
#   * https://nvd.nist.gov/vuln/detail/cve-2025-27836
#   * https://nvd.nist.gov/vuln/detail/cve-2025-27830
#   * https://nvd.nist.gov/vuln/detail/cve-2025-27833
#   * https://nvd.nist.gov/vuln/detail/cve-2025-27837
#   * https://nvd.nist.gov/vuln/detail/cve-2025-27834
#   * https://nvd.nist.gov/vuln/detail/cve-2024-46951
#   * https://nvd.nist.gov/vuln/detail/cve-2024-46952
#   * https://nvd.nist.gov/vuln/detail/cve-2024-46953
#   * https://nvd.nist.gov/vuln/detail/cve-2024-46954
#   * https://nvd.nist.gov/vuln/detail/cve-2024-46955
#   * https://nvd.nist.gov/vuln/detail/cve-2024-46956
#   * https://nvd.nist.gov/vuln/detail/cve-2024-33869
#   * https://nvd.nist.gov/vuln/detail/cve-2023-52722
#   * https://nvd.nist.gov/vuln/detail/cve-2024-33870
#   * https://nvd.nist.gov/vuln/detail/cve-2024-33871
#   * https://nvd.nist.gov/vuln/detail/cve-2024-29510
#  Decision: do not use package - multiple vulnerabilities with PDF corruption
#      for existing files, bookworm package (and backport) affected.
#  Mitigation: use source release. Default gs binary to custom binary
#      /usr/local/bin/gs instead of /usr/bin/gs.
#  Reference:
#  * https://github.com/tteck/Proxmox/discussions/3265
#  * https://github.com/ArtifexSoftware/ghostpdl-downloads/releases
- name: 'Install | Ghostscript {{ paperless_ngx_role_ghostscript_version }}'
  ansible.builtin.include_role:
    name: 'r_pufky.srv.repo'
  vars:
    repo_release_owner: '{{ paperless_ngx_role_ghostscript_owner }}'
    repo_release_repo: '{{ paperless_ngx_role_ghostscript_repo }}'
    repo_release_tag: '{{ _paperless_ngx_ghostscript_release_version }}'
    repo_release_asset:
      'ghostpdl-{{ paperless_ngx_service_ghostscript_version }}.tar.xz'
    repo_extract_dir: '{{ paperless_ngx_role_ghostscript_extract_dir }}'
    repo_extract_symlink:
      '{{ paperless_ngx_role_ghostscript_extract_symlink_target }}'
    repo_extract_mode: 'a-st,o-rwx'
    repo_extract_extra_opts: '--strip-components=1'

- name: 'Install | Ghostscript configuration (may take a while)'
  ansible.builtin.debug:
    msg: |
      Ghostscript is being built. This will take a few minutes.

- name: >
    Install | Build Ghostscript
    {{ paperless_ngx_role_ghostscript_version }}
  when: _repo_changed
  ansible.builtin.shell: >-
      set -o pipefail &&
      ./configure &&
      make &&
      make install
  args:
    executable: '/bin/bash'
    chdir: '{{ paperless_ngx_role_ghostscript_extract_symlink_target }}'
  changed_when: _paperless_ngx_ghostscript_build.rc == 0
  register: _paperless_ngx_ghostscript_build

- name: 'Install | create virtual environment'
  ansible.builtin.include_role:
    name: 'r_pufky.srv.avenv'
  vars:
    avenv_name: 'paperless'
    avenv_user: '{{ paperless_ngx_user }}'
    avenv_group: '{{ paperless_ngx_group }}'
    avenv_pip_extra_args: '--upgrade'
    avenv_pips: '{{ paperless_ngx_role_nltk_pip }}'
    avenv_pip_requirements_install: '{{ _paperless_ngx_dir }}'

- name: 'Install | additional NLTK data'
  when: paperless_ngx_service_nltk_data | length > 0
  ansible.builtin.command:
    argv:
      - '{{ _avenv_venv }}/bin/python3'
      - '-W'
      - 'ignore::RuntimeWarning'
      - '-m'
      - 'nltk.downloader'
      - '-d'
      - '{{ paperless_ngx_config_nltk_dir }}'
      - '{{ paperless_ngx_service_nltk_data | join(" ") }}'
    chdir: '{{ _paperless_ngx_dir }}/src'
  register: _paperless_ngx_nltk
  changed_when: '"already up-to-date" not in _paperless_ngx_nltk.stderr'
